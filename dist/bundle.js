/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_components_board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js-components/board */ \"./src/js-components/board.js\");\n/* harmony import */ var _js_components_fillBoard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js-components/fillBoard */ \"./src/js-components/fillBoard.js\");\n/* harmony import */ var _js_components_game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js-components/game */ \"./src/js-components/game.js\");\n\n\n\n\n// const gameBoard = new Board();\n// gameBoard.drawBoard();\n// fillBoard();\n\nconst game = new _js_components_game__WEBPACK_IMPORTED_MODULE_2__.Game();\n\ndocument.querySelectorAll('.board-container div').forEach(element => {\n    element.addEventListener('click', selectPiece)\n});\n\nfunction selectPiece(e){\n    if(e.target.parentElement.classList.contains('pieceInside'))\n        game.startMove(e.target.parentElement);\n}\n\n//# sourceURL=webpack://projekt3-chess/./src/index.js?");

/***/ }),

/***/ "./src/js-components/board.js":
/*!************************************!*\
  !*** ./src/js-components/board.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ID = exports.Board = void 0;\nvar ID;\n(function (ID) {\n    ID[ID[\"A\"] = 1] = \"A\";\n    ID[ID[\"B\"] = 2] = \"B\";\n    ID[ID[\"C\"] = 3] = \"C\";\n    ID[ID[\"D\"] = 4] = \"D\";\n    ID[ID[\"E\"] = 5] = \"E\";\n    ID[ID[\"F\"] = 6] = \"F\";\n    ID[ID[\"G\"] = 7] = \"G\";\n    ID[ID[\"H\"] = 8] = \"H\";\n})(ID || (ID = {}));\nexports.ID = ID;\nclass Board {\n    drawBoard() {\n        const boardWrapper = document.createElement('div');\n        boardWrapper.classList.add('board-wrapper');\n        const letters = document.createElement('div');\n        letters.classList.add('letters');\n        const numbers = document.createElement('div');\n        numbers.classList.add('numbers');\n        const boardContainer = document.createElement('div');\n        boardContainer.classList.add('board-container');\n        for (let i = 1; i < 9; i++) {\n            const div = document.createElement('div');\n            div.classList.add('notation');\n            div.innerText = `${ID[i]}`;\n            letters.appendChild(div);\n        }\n        for (let i = 8; i > 0; i--) {\n            const num = document.createElement('div');\n            num.innerText = `${i}`;\n            numbers.appendChild(num);\n        }\n        for (let i = 8; i > 0; i--) {\n            for (let j = 1; j < 9; j++) {\n                const div = document.createElement('div');\n                div.id = `${ID[j]}-${i}`; //<-- ważne żeby każdą komórkę na planszy dało się zidentyfikować za pomocą dwóch współrzędnych\n                if (i % 2 === 0)\n                    div.classList.add(`${j % 2 === 0 ? 'dark' : 'light'}`);\n                else\n                    div.classList.add(`${j % 2 === 0 ? 'light' : 'dark'}`);\n                boardContainer.appendChild(div);\n            }\n        }\n        document.querySelector('body').appendChild(boardWrapper).appendChild(numbers);\n        boardWrapper.appendChild(boardContainer);\n        boardWrapper.appendChild(letters);\n    }\n}\nexports.Board = Board;\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/board.js?");

/***/ }),

/***/ "./src/js-components/fillBoard.js":
/*!****************************************!*\
  !*** ./src/js-components/fillBoard.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fillBoard = void 0;\nconst king_1 = __webpack_require__(/*! ./pieces/king */ \"./src/js-components/pieces/king.js\");\nconst queen_1 = __webpack_require__(/*! ./pieces/queen */ \"./src/js-components/pieces/queen.js\");\nconst bishop_1 = __webpack_require__(/*! ./pieces/bishop */ \"./src/js-components/pieces/bishop.js\");\nconst knight_1 = __webpack_require__(/*! ./pieces/knight */ \"./src/js-components/pieces/knight.js\");\nconst rook_1 = __webpack_require__(/*! ./pieces/rook */ \"./src/js-components/pieces/rook.js\");\nconst pawn_1 = __webpack_require__(/*! ./pieces/pawn */ \"./src/js-components/pieces/pawn.js\");\nconst board_1 = __webpack_require__(/*! ./board */ \"./src/js-components/board.js\");\nconst fillBoard = () => {\n    //whites\n    const kingWhite = new king_1.King('white', `${board_1.ID[5]}`, 1);\n    const queenWhite = new queen_1.Queen('white', `${board_1.ID[4]}`, 1);\n    for (let i = 3; i <= 6; i += 3) {\n        const bishopWhite = new bishop_1.Bishop('white', `${board_1.ID[i]}`, 1);\n    }\n    for (let i = 2; i <= 7; i += 5) {\n        const knightWhite = new knight_1.Knight('white', `${board_1.ID[i]}`, 1);\n    }\n    for (let i = 1; i <= 8; i += 7) {\n        const rookWhite = new rook_1.Rook('white', `${board_1.ID[i]}`, 1);\n    }\n    for (let i = 1; i <= 8; i++) {\n        const pawnWhite = new pawn_1.Pawn('white', `${board_1.ID[i]}`, 2);\n    }\n    //blacks\n    const kingBlack = new king_1.King('white', `${board_1.ID[5]}`, 8);\n    const queenBlack = new queen_1.Queen('white', `${board_1.ID[4]}`, 8);\n    for (let i = 3; i <= 6; i += 3) {\n        const bishopBlack = new bishop_1.Bishop('white', `${board_1.ID[i]}`, 8);\n    }\n    for (let i = 2; i <= 7; i += 5) {\n        const knightBlack = new knight_1.Knight('white', `${board_1.ID[i]}`, 8);\n    }\n    for (let i = 1; i <= 8; i += 7) {\n        const rookBlack = new rook_1.Rook('white', `${board_1.ID[i]}`, 8);\n    }\n    for (let i = 1; i <= 8; i++) {\n        const pawnBlack = new pawn_1.Pawn('white', `${board_1.ID[i]}`, 7);\n    }\n};\nexports.fillBoard = fillBoard;\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/fillBoard.js?");

/***/ }),

/***/ "./src/js-components/game.js":
/*!***********************************!*\
  !*** ./src/js-components/game.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Game = void 0;\nconst board_1 = __webpack_require__(/*! ./board */ \"./src/js-components/board.js\");\nconst bishop_1 = __webpack_require__(/*! ./pieces/bishop */ \"./src/js-components/pieces/bishop.js\");\nconst king_1 = __webpack_require__(/*! ./pieces/king */ \"./src/js-components/pieces/king.js\");\nconst knight_1 = __webpack_require__(/*! ./pieces/knight */ \"./src/js-components/pieces/knight.js\");\nconst queen_1 = __webpack_require__(/*! ./pieces/queen */ \"./src/js-components/pieces/queen.js\");\nconst rook_1 = __webpack_require__(/*! ./pieces/rook */ \"./src/js-components/pieces/rook.js\");\nconst pawn_1 = __webpack_require__(/*! ./pieces/pawn */ \"./src/js-components/pieces/pawn.js\");\nconst board_2 = __webpack_require__(/*! ./board */ \"./src/js-components/board.js\");\nclass Game {\n    constructor() {\n        //private whoNext:string;\n        this.whites = [];\n        this.blacks = [];\n        this.gameBoard = new board_1.Board;\n        this.gameBoard.drawBoard();\n        this.whites.push(new queen_1.Queen('white', `${board_2.ID[4]}`, 1));\n        this.whites.push(new king_1.King('white', `${board_2.ID[5]}`, 1));\n        this.blacks.push(new queen_1.Queen('black', `${board_2.ID[4]}`, 8));\n        this.blacks.push(new king_1.King('black', `${board_2.ID[5]}`, 8));\n        for (let i = 3; i <= 6; i += 3) {\n            this.whites.push(new bishop_1.Bishop('white', `${board_2.ID[i]}`, 1));\n            this.blacks.push(new bishop_1.Bishop('black', `${board_2.ID[i]}`, 8));\n        }\n        for (let i = 2; i <= 7; i += 5) {\n            this.whites.push(new knight_1.Knight('white', `${board_2.ID[i]}`, 1));\n            this.blacks.push(new knight_1.Knight('black', `${board_2.ID[i]}`, 8));\n        }\n        for (let i = 1; i <= 8; i += 7) {\n            this.whites.push(new rook_1.Rook('white', `${board_2.ID[i]}`, 1));\n            this.blacks.push(new rook_1.Rook('black', `${board_2.ID[i]}`, 8));\n        }\n        for (let i = 1; i <= 8; i++) {\n            this.whites.push(new pawn_1.Pawn('white', `${board_2.ID[i]}`, 2));\n            this.blacks.push(new pawn_1.Pawn('black', `${board_2.ID[i]}`, 7));\n        }\n    }\n    startMove(square) {\n        const x = square.id.charAt(0);\n        const y = parseInt(square.id.charAt(2));\n        for (let p of this.whites) {\n            if (p.getPositionX() == x && p.getPositionY() == y) {\n                this.setLastChosen(p);\n                p.move();\n            }\n        }\n        for (let p of this.blacks) {\n            if (p.getPositionX() == x && p.getPositionY() == y) {\n                this.setLastChosen(p);\n                p.move();\n            }\n        }\n    }\n    setLastChosen(piece) {\n        Game.lastChosen = piece;\n    }\n    static getLastChosen() {\n        return Game.lastChosen;\n    }\n}\nexports.Game = Game;\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/game.js?");

/***/ }),

/***/ "./src/js-components/pieces/bishop.js":
/*!********************************************!*\
  !*** ./src/js-components/pieces/bishop.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Bishop = void 0;\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\nconst board_1 = __webpack_require__(/*! ../board */ \"./src/js-components/board.js\");\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\n//goniec / laufer\nclass Bishop extends piece_1.Piece {\n    constructor(color, positionX, positionY) {\n        super(color, positionX, positionY);\n        this.symbol = `../../../static/assets/${this.color}Bishop.png`;\n        this.setOnBoard(this.positionX, this.positionY);\n        let $self = this;\n    }\n    showPossibleMoves() {\n        this.removeClassActive();\n        const coordinateX = Object.values(board_1.ID).indexOf(this.positionX) + 1;\n        const coordinateY = this.positionY;\n        if (this.color === 'white') {\n            // move by one diagonal\n            // top right\n            if (9 - coordinateX < 9 - coordinateY) {\n                for (let i = 1; i < 9 - coordinateX; i++) {\n                    if (document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY + i}`).classList.contains('pieceInside')) {\n                        break;\n                    }\n                    else {\n                        document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY + i}`).classList.add('active');\n                    }\n                }\n            }\n            else {\n                for (let i = 1; i < 9 - coordinateY; i++) {\n                    if (document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY + i}`).classList.contains('pieceInside')) {\n                        break;\n                    }\n                    else {\n                        document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY + i}`).classList.add('active');\n                    }\n                }\n            }\n            // down left\n            if (coordinateY - 1 < coordinateX - 1) {\n                for (let i = 1; i < coordinateY; i++) {\n                    if (document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY - i}`).classList.contains('pieceInside')) {\n                        break;\n                    }\n                    else {\n                        document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY - i}`).classList.add('active');\n                    }\n                }\n            }\n            else {\n                for (let i = 1; i < coordinateX; i++) {\n                    if (document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY - i}`).classList.contains('pieceInside')) {\n                        break;\n                    }\n                    else {\n                        document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY - i}`).classList.add('active');\n                    }\n                }\n            }\n            // move by second diagonal\n            // top left\n            if (coordinateX < 9 - coordinateY) {\n                for (let i = 1; i < coordinateX; i++) {\n                    if (document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY + i}`).classList.contains('pieceInside')) {\n                        break;\n                    }\n                    else {\n                        document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY + i}`).classList.add('active');\n                    }\n                }\n            }\n            else {\n                for (let i = 1; i < 9 - coordinateY; i++) {\n                    if (document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY + i}`).classList.contains('pieceInside')) {\n                        break;\n                    }\n                    else {\n                        document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY + i}`).classList.add('active');\n                    }\n                }\n            }\n            // down right\n            if (coordinateY < 9 - coordinateX) {\n                for (let i = 1; i < coordinateY; i++) {\n                    if (document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY - i}`).classList.contains('pieceInside')) {\n                        break;\n                    }\n                    else {\n                        document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY - i}`).classList.add('active');\n                    }\n                }\n            }\n            else {\n                for (let i = 1; i < 9 - coordinateX; i++) {\n                    if (document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY - i}`).classList.contains('pieceInside')) {\n                        break;\n                    }\n                    else {\n                        document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY - i}`).classList.add('active');\n                    }\n                }\n            }\n        }\n        document.querySelectorAll('.active').forEach((possibleMove) => {\n            possibleMove.addEventListener('click', () => {\n                const posX = possibleMove.id.charAt(0);\n                const posY = parseInt(possibleMove.id.charAt(2));\n                if (possibleMove.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\n                    this.setOnBoard(posX, posY);\n                    this.removeClassActive();\n                }\n            });\n        });\n    }\n    moveBishop(possibleMove) {\n        const posX = possibleMove.id.charAt(0);\n        const posY = parseInt(possibleMove.id.charAt(2));\n        this.setOnBoard(posX, posY);\n    }\n}\nexports.Bishop = Bishop;\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/bishop.js?");

/***/ }),

/***/ "./src/js-components/pieces/king.js":
/*!******************************************!*\
  !*** ./src/js-components/pieces/king.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.King = void 0;\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\nclass King extends piece_1.Piece {\n    constructor(color, positionX, positionY) {\n        super(color, positionX, positionY);\n        this.symbol = `../../../static/assets/${this.color}King.png`; //<-- w przyszłości bedzie tu ścieżka do img figury\n        this.setOnBoard(this.positionX, this.positionY);\n    }\n    showPossibleMoves() {\n        this.removeClassActive();\n        const arrayOfX = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n        const indexOfX = arrayOfX.indexOf(this.getPositionX());\n        for (let i = -1; i <= 1; i++) {\n            for (let j = -1; j <= 1; j++) {\n                const square = document.querySelector(`#${arrayOfX[indexOfX + i]}-${this.getPositionY() + j}`);\n                if (square != null && square.innerHTML == \"\")\n                    square.classList.add('active');\n            }\n        }\n        this.move();\n    }\n    move() {\n        const squares = document.querySelectorAll('.board-container div');\n        squares.forEach(square => {\n            square.addEventListener('click', () => {\n                if (square.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\n                    this.setOnBoard(square.id.charAt(0), parseInt(square.id.charAt(2)));\n                }\n            });\n        });\n    }\n}\nexports.King = King;\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/king.js?");

/***/ }),

/***/ "./src/js-components/pieces/knight.js":
/*!********************************************!*\
  !*** ./src/js-components/pieces/knight.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Knight = void 0;\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\nconst board_1 = __webpack_require__(/*! ../board */ \"./src/js-components/board.js\");\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\n//skoczek / koń\nclass Knight extends piece_1.Piece {\n    constructor(color, positionX, positionY) {\n        super(color, positionX, positionY);\n        this.symbol = `../../../static/assets/${this.color}Knight.png`;\n        this.setOnBoard(this.positionX, this.positionY);\n    }\n    showPossibleMoves() {\n        this.removeClassActive();\n        const allPossibleIds = []; // przechowuje wszystkie możliwe ID - łącznie z tymi na których stoją inne figury - przyda się do spr. czy stoją figury innego koloru i zbijania\n        this.possibleMovesIds = []; // tu trafiają tylko możliwe ruchy figury\n        const coordinateX = Object.values(board_1.ID).indexOf(this.positionX) + 1;\n        const coordinateY = this.positionY;\n        // wypłenienie tablicy wszystkimi możliwymi ruchami - bez sprawdzenia czy stoją na polach inne bierki\n        for (let i = coordinateX - 2; i <= coordinateX + 2; i += 4) {\n            if (i >= 1 && i <= 8) {\n                for (let j = coordinateY - 1; j <= coordinateY + 1; j += 2) {\n                    if (j >= 1 && j <= 8) {\n                        allPossibleIds.push(`${board_1.ID[i]}-${j}`);\n                    }\n                }\n            }\n        }\n        for (let i = coordinateY - 2; i <= coordinateY + 2; i += 4) {\n            if (i >= 1 && i <= 8) {\n                for (let j = coordinateX - 1; j <= coordinateX + 1; j += 2) {\n                    if (j >= 1 && j <= 8) {\n                        allPossibleIds.push(`${board_1.ID[j]}-${i}`);\n                    }\n                }\n            }\n        }\n        // Sprawdzenie czy na polu nie stoi żadna figura lub czy figura ma taki kolor jak atakująca, jesli nie to dodaję ID do właściwej - zwracanej tablicy.\n        allPossibleIds.forEach((id) => {\n            if (!(document.querySelector(`#${id}`).querySelector('img')?.classList.contains(`${this.color}`)) || document.querySelector(`#${id}`).innerHTML == '') {\n                this.possibleMovesIds.push(id);\n            }\n        });\n        console.log(this.possibleMovesIds);\n        return this.possibleMovesIds;\n    }\n    move() {\n        const possibilities = this.showPossibleMoves();\n        possibilities.forEach((id) => {\n            document.querySelector(`#${id}`).classList.add('active');\n        });\n        //adding event listener to each field with active class to perform a figure's move after click\n        document.querySelectorAll('.active').forEach((possMove) => {\n            possMove.addEventListener('click', () => {\n                const coorX = possMove.id.charAt(0);\n                const coorY = parseInt(possMove.id.charAt(2));\n                if (possMove.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\n                    // // próbna implementacja bicia\n                    // if (possMove.innerHTML != '') {\n                    //     possMove.innerHTML = '';\n                    // }\n                    this.setOnBoard(coorX, coorY);\n                    this.removeClassActive();\n                }\n            });\n        });\n    }\n}\nexports.Knight = Knight;\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/knight.js?");

/***/ }),

/***/ "./src/js-components/pieces/pawn.js":
/*!******************************************!*\
  !*** ./src/js-components/pieces/pawn.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pawn = void 0;\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\n//pion\nclass Pawn extends piece_1.Piece {\n    constructor(color, positionX, positionY) {\n        super(color, positionX, positionY);\n        this.symbol = `../../../static/assets/${this.color}Pawn.png`;\n        this.setOnBoard(this.positionX, this.positionY);\n        let $self = this;\n        // this.parentSquare.addEventListener(\"click\", this.showPossibleMoves.bind(this));\n    }\n    showPossibleMoves() {\n        this.removeClassActive();\n        if (this.color === 'white') {\n            let positionY1 = this.positionY + 1;\n            if (positionY1 > 8 || document.getElementById(`${this.positionX}-${positionY1}`).classList.contains('pieceInside')) {\n                //console.log('no possible moves!');\n                return;\n            }\n            if (this.positionY === 2) {\n                for (let i = 3; i < 5; i++) {\n                    document.getElementById(`${this.positionX}-${i}`).classList.add('active');\n                }\n            }\n            else {\n                document.getElementById(`${this.positionX}-${positionY1}`).classList.add('active');\n            }\n        }\n        else {\n            let positionY1 = this.positionY - 1;\n            if (this.positionY === 7) {\n                for (let i = 6; i > 4; i--) {\n                    document.getElementById(`${this.positionX}-${i}`).classList.add('active');\n                }\n            }\n            else {\n                document.getElementById(`${this.positionX}-${positionY1}`).classList.add('active');\n            }\n        }\n        document.querySelectorAll('.active').forEach((possibleMove) => {\n            possibleMove.addEventListener('click', () => {\n                if (possibleMove.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\n                    const posX = possibleMove.id.charAt(0);\n                    const posY = parseInt(possibleMove.id.charAt(2));\n                    this.setOnBoard(posX, posY);\n                    this.removeClassActive();\n                }\n            });\n        });\n    }\n    movePawn(possibleMove) {\n        const posX = possibleMove.id.charAt(0);\n        const posY = parseInt(possibleMove.id.charAt(2));\n        this.setOnBoard(posX, posY);\n    }\n}\nexports.Pawn = Pawn;\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/pawn.js?");

/***/ }),

/***/ "./src/js-components/pieces/piece.js":
/*!*******************************************!*\
  !*** ./src/js-components/pieces/piece.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Piece = void 0;\nclass Piece {\n    //zastanawiam się czy nie zrobić tych wszystkich właściwości private...\n    constructor(color, positionX, positionY) {\n        this.symbol = ''; //<-- domyślnie ustawiłem puste, bo każda figura ma inny symbol\n        this.color = color;\n        this.positionX = positionX;\n        this.positionY = positionY;\n        this.possibleMovesIds = [];\n        this.parentSquare = document.getElementById(`${this.positionX}-${this.positionY}`); //<-- parentSquare przechowuje diva, w którym obecnie znajduje się figura\n    }\n    setOnBoard(pX, pY) {\n        this.parentSquare.innerHTML = \"\";\n        this.parentSquare.classList.remove('pieceInside');\n        const img = document.createElement('img');\n        img.classList.add('image');\n        img.classList.add(`${this.color.toLocaleLowerCase()}`);\n        img.setAttribute('src', this.symbol);\n        this.updatePosition(pX, pY);\n        this.parentSquare.appendChild(img);\n        const imgContainer = img.parentElement;\n        imgContainer.classList.add('pieceInside');\n    }\n    updatePosition(pX, pY) {\n        this.positionX = pX;\n        this.positionY = pY;\n        this.parentSquare = document.getElementById(`${this.positionX}-${this.positionY}`);\n    }\n    removeClassActive() {\n        let elems = document.querySelectorAll('.active');\n        for (var i = 0; i < elems.length; i++) {\n            elems[i].classList.remove('active');\n        }\n    }\n    getPositionX() {\n        return this.positionX;\n    }\n    getPositionY() {\n        return this.positionY;\n    }\n}\nexports.Piece = Piece;\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/piece.js?");

/***/ }),

/***/ "./src/js-components/pieces/queen.js":
/*!*******************************************!*\
  !*** ./src/js-components/pieces/queen.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Queen = void 0;\nconst board_1 = __webpack_require__(/*! ../board */ \"./src/js-components/board.js\");\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\n//królowa / hetman\nclass Queen extends piece_1.Piece {\n    constructor(color, positionX, positionY, history) {\n        super(color, positionX, positionY);\n        this.history = history;\n        //this.symbol = `../../../static/assets/${this.color}Queen.png`;\n        //this.symbol = `../../../../Projekt3-chess/static/assets/whiteQueen.png`;\n        this.symbol = `../../../static/assets/${this.color}King.png`;\n        this.setOnBoard(this.positionX, this.positionY);\n    }\n    showPossibleMoves() {\n        const movesShow = (id) => {\n            const movesPossibilities = [...document.querySelectorAll(`#${id}`)];\n            movesPossibilities.forEach(el => {\n                el.classList.toggle('active');\n            });\n        };\n        this.collectAllPossibleMoves().forEach(id => {\n            movesShow(id);\n            this.queenMove();\n        });\n    }\n    queenMove() {\n        const squares = [...document.querySelectorAll('.board-container div')];\n        squares.forEach(square => {\n            square.addEventListener('click', () => {\n                if (!(square).classList.contains('pieceInside') && (square).classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\n                    this.setOnBoard((square).id.charAt(0), parseInt((square).id.charAt(2)));\n                    this.removeClassActive();\n                }\n            });\n        });\n    }\n    collectAllPossibleMoves() {\n        const coordinateX = Object.values(board_1.ID).indexOf(this.positionX) + 1;\n        const moves = [];\n        const moveUp = () => {\n            for (let i = this.positionY + 1; i < 9; i++) {\n                const checkSquare = document.querySelector(`#${this.positionX}-${i}`);\n                if (checkSquare?.classList.contains('pieceInside') || checkSquare == null)\n                    return;\n                moves.push(`${this.positionX}-${i}`);\n            }\n        };\n        const moveDown = () => {\n            for (let j = this.positionY - 1; j > 0; j--) {\n                const checkSquare = document.querySelector(`#${this.positionX}-${j}`);\n                if (checkSquare?.classList.contains('pieceInside') || checkSquare === null)\n                    return;\n                moves.push(`${this.positionX}-${j}`);\n            }\n        };\n        const moveRight = () => {\n            for (let i = coordinateX + 1; i < 9; i++) {\n                const checkSquare = document.querySelector(`#${board_1.ID[i]}-${this.positionY}`);\n                if (checkSquare?.classList.contains('pieceInside') || checkSquare == null)\n                    return;\n                moves.push(`${board_1.ID[i]}-${this.positionY}`);\n            }\n        };\n        const moveLeft = () => {\n            for (let i = coordinateX - 1; i > 0; i--) {\n                const checkSquare = document.querySelector(`#${board_1.ID[i]}-${this.positionY}`);\n                if (checkSquare?.classList.contains('pieceInside') || checkSquare == null)\n                    return;\n                moves.push(`${board_1.ID[i]}-${this.positionY}`);\n            }\n        };\n        const diagonalMoves = () => {\n            if (this.color === 'white') {\n                // top right\n                if (9 - coordinateX < 9 - this.positionY) {\n                    for (let i = 1; i < 9 - coordinateX; i++) {\n                        if (document.getElementById(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`).classList.contains('pieceInside')) {\n                            break;\n                        }\n                        else {\n                            moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`);\n                        }\n                    }\n                }\n                else {\n                    for (let i = 1; i < 9 - this.positionY; i++) {\n                        if (document.getElementById(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`).classList.contains('pieceInside')) {\n                            break;\n                        }\n                        else {\n                            moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`);\n                        }\n                    }\n                }\n                // down left\n                if (this.positionY - 1 < coordinateX - 1) {\n                    for (let i = 1; i < this.positionY; i++) {\n                        if (document.getElementById(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`).classList.contains('pieceInside')) {\n                            break;\n                        }\n                        else {\n                            moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`);\n                        }\n                    }\n                }\n                else {\n                    for (let i = 1; i < coordinateX; i++) {\n                        if (document.getElementById(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`).classList.contains('pieceInside')) {\n                            break;\n                        }\n                        else {\n                            moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`);\n                        }\n                    }\n                }\n                // top left\n                if (coordinateX < 9 - this.positionY) {\n                    for (let i = 1; i < coordinateX; i++) {\n                        if (document.getElementById(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`).classList.contains('pieceInside')) {\n                            break;\n                        }\n                        else {\n                            moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`);\n                        }\n                    }\n                }\n                else {\n                    for (let i = 1; i < 9 - this.positionY; i++) {\n                        if (document.getElementById(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`).classList.contains('pieceInside')) {\n                            break;\n                        }\n                        else {\n                            moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`);\n                        }\n                    }\n                }\n                // down right\n                if (this.positionY < 9 - coordinateX) {\n                    for (let i = 1; i < this.positionY; i++) {\n                        if (document.getElementById(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`).classList.contains('pieceInside')) {\n                            break;\n                        }\n                        else {\n                            moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`);\n                        }\n                    }\n                }\n                else {\n                    for (let i = 1; i < 9 - coordinateX; i++) {\n                        if (document.getElementById(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`).classList.contains('pieceInside')) {\n                            break;\n                        }\n                        else {\n                            moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`);\n                        }\n                    }\n                }\n            }\n        };\n        diagonalMoves();\n        moveUp();\n        moveDown();\n        moveLeft();\n        moveRight();\n        return moves;\n    }\n}\nexports.Queen = Queen;\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/queen.js?");

/***/ }),

/***/ "./src/js-components/pieces/rook.js":
/*!******************************************!*\
  !*** ./src/js-components/pieces/rook.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\"use stricte\";\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Rook = void 0;\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\n//wieża\nclass Rook extends piece_1.Piece {\n    constructor(color, positionX, positionY) {\n        super(color, positionX, positionY);\n        this.symbol = `../../../static/assets/${this.color}Rook.png`;\n        this.setOnBoard(this.positionX, this.positionY);\n    }\n    showPossibleMoves() {\n        this.removeClassActive();\n        const arrayOfX = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n        // const indexOfX:number = arrayOfX.indexOf(this.getPositionX());\n        const rookLineX = this.getPositionX();\n        const rookLineY = this.getPositionY();\n        const checkYAxis = () => {\n            // top\n            console.log(rookLineX, rookLineY);\n            for (let i = rookLineY + 1; i <= 8; i++) {\n                let squareY = document.querySelector(`#${rookLineX}-${i}`);\n                if (!squareY?.classList.contains('pieceInside')) {\n                    if (squareY != null)\n                        squareY.classList.add('active');\n                }\n                else {\n                    break;\n                }\n            }\n            // bot\n            for (let i = rookLineY - 1; i > 0; i--) {\n                let squareY = document.querySelector(`#${rookLineX}-${i}`);\n                if (!squareY?.classList.contains('pieceInside')) {\n                    if (squareY != null)\n                        squareY.classList.add('active');\n                }\n                else {\n                    break;\n                }\n            }\n        };\n        const checkXAxis = () => {\n            // right\n            const clickedElementIndex = arrayOfX.indexOf(rookLineX);\n            for (let i = clickedElementIndex; i <= 8; i++) {\n                let squareY = document.querySelector(`#${arrayOfX[i + 1]}-${rookLineY}`);\n                if (!squareY?.classList.contains('pieceInside')) {\n                    if (squareY != null)\n                        squareY.classList.add('active');\n                }\n                else {\n                    break;\n                }\n            }\n            // left\n            for (let i = clickedElementIndex; i > 0; i--) {\n                let squareY = document.querySelector(`#${arrayOfX[i - 1]}-${rookLineY}`);\n                if (!squareY?.classList.contains('pieceInside')) {\n                    if (squareY != null)\n                        squareY.classList.add('active');\n                }\n                else {\n                    break;\n                }\n            }\n        };\n        checkYAxis();\n        checkXAxis();\n        const squares = document.querySelectorAll('.board-container div');\n        squares.forEach(square => {\n            square.addEventListener('click', (e) => {\n                let pickedFigure = e.currentTarget;\n                if (!(square.classList.contains('pieceInside')) && square.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\n                    this.setOnBoard(square.id.charAt(0), parseInt(square.id.charAt(2)));\n                    squares.forEach(square => square.classList.remove('active'));\n                }\n            });\n        });\n    }\n}\nexports.Rook = Rook;\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/rook.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;