/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_components_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js-components/game */ \"./src/js-components/game.js\");\n/* harmony import */ var _js_components_timeHistoryContainer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js-components/timeHistoryContainer */ \"./src/js-components/timeHistoryContainer.js\");\n/* harmony import */ var _js_components_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js-components/timer */ \"./src/js-components/timer.js\");\n/* harmony import */ var _js_components_starting_page_logo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js-components/starting_page/logo */ \"./src/js-components/starting_page/logo.js\");\n/* harmony import */ var _js_components_starting_page_logo__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_js_components_starting_page_logo__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _js_components_starting_page_menuContainer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./js-components/starting_page/menuContainer */ \"./src/js-components/starting_page/menuContainer.js\");\n/* harmony import */ var _js_components_starting_page_menuContainer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_js_components_starting_page_menuContainer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _js_components_end_page_endListener__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./js-components/end-page/endListener */ \"./src/js-components/end-page/endListener.js\");\n/* harmony import */ var _js_components_starting_page_lang__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./js-components/starting_page/lang */ \"./src/js-components/starting_page/lang.js\");\n/* harmony import */ var _js_components_starting_page_lang__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_js_components_starting_page_lang__WEBPACK_IMPORTED_MODULE_6__);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndocument.querySelectorAll('.board-container div').forEach((element) => {\r\n  element.addEventListener('click', selectPiece);\r\n});\r\n\r\ndocument.body.appendChild(_js_components_starting_page_lang__WEBPACK_IMPORTED_MODULE_6___default()());\r\n\r\ndocument.querySelector('.eng').addEventListener('click', () => {\r\n  document.documentElement.lang = 'en';\r\n  localStorage.setItem('lang', 'en');\r\n  document.location.reload();\r\n  console.log('ang');\r\n});\r\n\r\ndocument.querySelector('.pl').addEventListener('click', () => {\r\n  document.documentElement.lang = 'pl';\r\n  localStorage.setItem('lang', 'pl');\r\n  document.location.reload();\r\n  console.log('pl');\r\n});\r\n\r\nif (localStorage) {\r\n  document.documentElement.lang = localStorage.getItem('lang');\r\n} else {\r\n  document.documentElement.lang = \"pl\";\r\n}\r\n\r\n// load start window\r\ndocument.body.appendChild(_js_components_starting_page_logo__WEBPACK_IMPORTED_MODULE_3___default()());\r\ndocument.body.appendChild(_js_components_starting_page_menuContainer__WEBPACK_IMPORTED_MODULE_4___default()());\r\n\r\n// time\r\nvar gameTime = document.querySelector('.rs-range');\r\nvar time = document.querySelector('.rs-range').value / 2;\r\ngameTime.onchange = function (event) {\r\n  time = document.querySelector('.rs-range').value / 2;\r\n};\r\n// firstPlayer\r\nvar player1 = document.getElementById(\"player1-input\");\r\nvar player1Name = player1.placeholder;\r\nplayer1.onchange = function(event){\r\n  player1Name = player1.value;\r\n}\r\n// secondPlayer\r\nvar player2 = document.getElementById(\"player2-input\");\r\nvar player2Name = player2.placeholder;\r\nplayer2.onchange = function(event){\r\n  player2Name = player2.value;\r\n}\r\n\r\n// end test button\r\n// const testButton = document.querySelector('.testEnd');\r\n// testButton.addEventListener('click', () => {\r\n//   let endModalResult = new endResult('USER1', 'USER2', 'Mateusz', 'czas');\r\n//   endModalResult.showResult();\r\n// });\r\n\r\n// start the game after click button\r\nconst startButton = document.querySelector('.start-button');\r\nstartButton.addEventListener('click', () => {\r\n  // hide start box after start the game\r\n  let logoElement = document.querySelector('.logo');\r\n  let menuContainer = document.querySelector('.menuContainer');\r\n  let bodyContainer = document.getElementsByTagName('body');\r\n  bodyContainer[0].classList.remove('body-start-page');\r\n  logoElement.classList.add('display-none');\r\n  menuContainer.remove();\r\n\r\n  // new Game\r\n  const game = new _js_components_game__WEBPACK_IMPORTED_MODULE_0__.Game(time, player1Name, player2Name);\r\n  _js_components_game__WEBPACK_IMPORTED_MODULE_0__.Game.getWhiteTimer().start();\r\n  //document.body.appendChild(game.timeHistory.timeHistoryContainer());\r\n  //var TimerTry = new Timer(60, 'timer-white');\r\n  //var TimerTry1 = new Timer(60, 'timer-black');\r\n\r\n  // TEST:\r\n  // if (true) {\r\n  //   TimerTry.start();\r\n  // }\r\n  // let el = document.getElementById('timer-black');\r\n  // if (true) {\r\n  //   TimerTry1.start();\r\n  // }\r\n  document.querySelectorAll('.board-container div').forEach((element) => {\r\n    element.addEventListener('click', selectPiece);\r\n  });\r\n  function selectPiece(e) {\r\n    if (e.target.parentElement.classList.contains('pieceInside'))\r\n      game.startMove(e.target.parentElement);\r\n  }\r\n\r\n  document.querySelector('.undo-button').addEventListener('click', () => {\r\n    if(_js_components_game__WEBPACK_IMPORTED_MODULE_0__.Game.moveCounter === true){\r\n      _js_components_game__WEBPACK_IMPORTED_MODULE_0__.Game.reverseMove();\r\n      _js_components_game__WEBPACK_IMPORTED_MODULE_0__.Game.moveCounter = false;\r\n    }\r\n  });\r\n});\r\n\r\n// document.querySelector('.eng')?.addEventListener('click', () => {\r\n//   document.documentElement.lang = 'en';\r\n// });\r\n// document.querySelector('.pl').addEventListener('click', () => {\r\n//   document.documentElement.lang = 'pl';\r\n// });\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/index.js?");

/***/ }),

/***/ "./src/js-components/addMoveHistory.js":
/*!*********************************************!*\
  !*** ./src/js-components/addMoveHistory.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.addMoveHistory = void 0;\r\nfunction addMoveHistory(history, color) {\r\n    const timeHistoryContainer = document.getElementsByClassName(\"history-div-body\")[0];\r\n    const moveHeader = document.createElement(\"div\");\r\n    moveHeader.className = \"history-moveHeader\";\r\n    moveHeader.innerHTML = color;\r\n    const move = document.createElement(\"div\");\r\n    move.className = \"history-move\";\r\n    move.innerHTML = history;\r\n    timeHistoryContainer.appendChild(moveHeader);\r\n    timeHistoryContainer.appendChild(move);\r\n    timeHistoryContainer.scrollTop = moveHeader.offsetHeight + moveHeader.offsetTop;\r\n    return timeHistoryContainer;\r\n}\r\nexports.addMoveHistory = addMoveHistory;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/addMoveHistory.js?");

/***/ }),

/***/ "./src/js-components/board.js":
/*!************************************!*\
  !*** ./src/js-components/board.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ID = exports.Board = void 0;\r\nvar ID;\r\n(function (ID) {\r\n    ID[ID[\"A\"] = 1] = \"A\";\r\n    ID[ID[\"B\"] = 2] = \"B\";\r\n    ID[ID[\"C\"] = 3] = \"C\";\r\n    ID[ID[\"D\"] = 4] = \"D\";\r\n    ID[ID[\"E\"] = 5] = \"E\";\r\n    ID[ID[\"F\"] = 6] = \"F\";\r\n    ID[ID[\"G\"] = 7] = \"G\";\r\n    ID[ID[\"H\"] = 8] = \"H\";\r\n})(ID || (ID = {}));\r\nexports.ID = ID;\r\nclass Board {\r\n    drawBoard() {\r\n        const boardWrapper = document.createElement('div');\r\n        boardWrapper.classList.add('board-wrapper');\r\n        const letters = document.createElement('div');\r\n        letters.classList.add('letters');\r\n        const numbers = document.createElement('div');\r\n        numbers.classList.add('numbers');\r\n        const boardContainer = document.createElement('div');\r\n        boardContainer.classList.add('board-container');\r\n        for (let i = 1; i < 9; i++) {\r\n            const div = document.createElement('div');\r\n            div.classList.add('notation');\r\n            div.innerText = `${ID[i]}`;\r\n            letters.appendChild(div);\r\n        }\r\n        for (let i = 8; i > 0; i--) {\r\n            const num = document.createElement('div');\r\n            num.innerText = `${i}`;\r\n            numbers.appendChild(num);\r\n        }\r\n        for (let i = 8; i > 0; i--) {\r\n            for (let j = 1; j < 9; j++) {\r\n                const div = document.createElement('div');\r\n                div.id = `${ID[j]}-${i}`; //<-- ważne żeby każdą komórkę na planszy dało się zidentyfikować za pomocą dwóch współrzędnych\r\n                if (i % 2 === 0)\r\n                    div.classList.add(`${j % 2 === 0 ? 'dark' : 'light'}`);\r\n                else\r\n                    div.classList.add(`${j % 2 === 0 ? 'light' : 'dark'}`);\r\n                boardContainer.appendChild(div);\r\n            }\r\n        }\r\n        document.querySelector('body').appendChild(boardWrapper).appendChild(numbers);\r\n        boardWrapper.appendChild(boardContainer);\r\n        boardWrapper.appendChild(letters);\r\n    }\r\n}\r\nexports.Board = Board;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/board.js?");

/***/ }),

/***/ "./src/js-components/end-page/endListener.js":
/*!***************************************************!*\
  !*** ./src/js-components/end-page/endListener.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.endResult = void 0;\r\nclass endResult {\r\n    constructor(user1, user2, winer, how) {\r\n        this.user1 = user1;\r\n        this.user2 = user2;\r\n        this.winer = winer;\r\n        this.how = how;\r\n        this.boardWrapper = document.querySelector('.board-wrapper');\r\n        this.timeHistoryContainer = document.querySelector('.time-history-container');\r\n        this.bodyContainer = document.getElementsByTagName('body');\r\n        this.logoElement = document.querySelector('.logo');\r\n        this.menuContainer = document.querySelector('.menuContainer');\r\n    }\r\n    showResult() {\r\n        this.logoElement.classList.remove('display-none');\r\n        this.bodyContainer[0].classList.add('body-start-page');\r\n        this.timeHistoryContainer.remove();\r\n        this.boardWrapper.remove();\r\n        const obj = {\r\n            user1: this.user1,\r\n            user2: this.user2,\r\n            winner: this.winer,\r\n            how: this.how\r\n        };\r\n        function title() {\r\n            const titleDiv = document.createElement(\"div\");\r\n            titleDiv.className = \"menuTitle\";\r\n            const title = document.createElement(\"h1\");\r\n            title.innerHTML = \"KONIEC GRY\";\r\n            if (document.documentElement.lang === 'en') {\r\n                title.innerHTML = \"END OF THE GAME\";\r\n            }\r\n            titleDiv.appendChild(title);\r\n            return title;\r\n        }\r\n        function gameResult() {\r\n            const nameDiv = document.createElement(\"div\");\r\n            nameDiv.className = \"menuNames\";\r\n            const title = document.createElement(\"h2\");\r\n            const title2 = document.createElement(\"h3\");\r\n            title.className = \"title-result\";\r\n            title2.className = \"title-result\";\r\n            if (obj.how === 'pat') {\r\n                title.innerHTML = `PAT (REMIS)`;\r\n                title2.innerHTML = `Gracz ${obj.user1} zremisował z graczem ${obj.user2}`;\r\n                if (document.documentElement.lang === 'en') {\r\n                    title.innerHTML = \"STALEMATE\";\r\n                    title2.innerHTML = `Player ${obj.user1} stalemate with player ${obj.user2}`;\r\n                }\r\n            }\r\n            else if (obj.how == 'czas') {\r\n                title2.innerHTML = `Koniec czasu przeciwnika`;\r\n                title.innerHTML = `Wygrał gracz ${obj.winner}`;\r\n                if (document.documentElement.lang === 'en') {\r\n                    title.innerHTML = \"End of time\";\r\n                    title2.innerHTML = `Player ${obj.user1} win!`;\r\n                }\r\n            }\r\n            else if (obj.how === 'remis') {\r\n                title.innerHTML = `REMIS`;\r\n                title2.innerHTML = `Gracz ${obj.user1} zremisował z graczem ${obj.user2}`;\r\n                if (document.documentElement.lang === 'en') {\r\n                    title.innerHTML = \"DRAW\";\r\n                    title2.innerHTML = `Player ${obj.user1} draw with ${obj.user2}`;\r\n                }\r\n            }\r\n            else {\r\n                title.innerHTML = `Wygrał gracz ${obj.winner}`;\r\n                title2.innerHTML = `SZACH-MAT`;\r\n                if (document.documentElement.lang === 'en') {\r\n                    title.innerHTML = `Player ${obj.winner} win`;\r\n                    title2.innerHTML = `CHECKMATE`;\r\n                }\r\n            }\r\n            const inputDiv = document.createElement(\"div\");\r\n            nameDiv.appendChild(title);\r\n            nameDiv.appendChild(title2);\r\n            nameDiv.appendChild(inputDiv);\r\n            return nameDiv;\r\n        }\r\n        function startButton() {\r\n            const startButtonContainer = document.createElement(\"div\");\r\n            startButtonContainer.className = \"restart-button\";\r\n            const startButtonText = document.createElement(\"p\");\r\n            startButtonText.innerHTML = \"Strona główna\";\r\n            if (document.documentElement.lang === 'en') {\r\n                startButtonText.innerHTML = \"Main menu\";\r\n            }\r\n            startButtonContainer.addEventListener('click', () => {\r\n                location.reload();\r\n            });\r\n            startButtonContainer.appendChild(startButtonText);\r\n            return startButtonContainer;\r\n        }\r\n        function menuContainer() {\r\n            const menu = document.createElement(\"div\");\r\n            menu.className = \"menuContainer\";\r\n            menu.appendChild(title());\r\n            menu.appendChild(gameResult());\r\n            menu.appendChild(startButton());\r\n            return menu;\r\n        }\r\n        document.body.appendChild(menuContainer());\r\n    }\r\n    ;\r\n}\r\nexports.endResult = endResult;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/end-page/endListener.js?");

/***/ }),

/***/ "./src/js-components/endGameCases.js":
/*!*******************************************!*\
  !*** ./src/js-components/endGameCases.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.endGame = void 0;\r\nconst game_1 = __webpack_require__(/*! ./game */ \"./src/js-components/game.js\");\r\nconst endListener_1 = __webpack_require__(/*! ./end-page/endListener */ \"./src/js-components/end-page/endListener.js\");\r\nvar endGameCases;\r\n(function (endGameCases) {\r\n    endGameCases[\"draw\"] = \"remis\";\r\n    endGameCases[\"stalemate\"] = \"pat\";\r\n    endGameCases[\"checkMate\"] = \"\";\r\n})(endGameCases || (endGameCases = {}));\r\nfunction endCase() {\r\n    const whites = game_1.Game.getWhites();\r\n    const blacks = game_1.Game.getBlacks();\r\n    const whiteKing = game_1.Game.getWhiteKing();\r\n    const blackKing = game_1.Game.getBlackKing();\r\n    const endGameCase = {\r\n        user1: 'Białe',\r\n        user2: 'Czarne',\r\n        winner: '',\r\n        how: '',\r\n        finish: false\r\n    };\r\n    if (whites.length === 1 && blacks.length === 1) {\r\n        endGameCase.how = endGameCases.draw;\r\n        endGameCase.finish = true;\r\n    }\r\n    if (!whiteKing.isChecked() && !whiteKing.isCheckmated() && whiteKing.areAllPossibleMovesInDangerZones()) {\r\n        endGameCase.how = endGameCases.stalemate;\r\n        endGameCase.finish = true;\r\n    }\r\n    else if (!blackKing.isChecked() && !blackKing.isCheckmated() && blackKing.areAllPossibleMovesInDangerZones()) {\r\n        endGameCase.how = endGameCases.stalemate;\r\n        endGameCase.finish = true;\r\n    }\r\n    if (whiteKing.isCheckmated()) {\r\n        endGameCase.how = endGameCases.checkMate;\r\n        endGameCase.winner = endGameCase.user2;\r\n        endGameCase.finish = true;\r\n    }\r\n    else if (blackKing.isCheckmated()) {\r\n        endGameCase.how = endGameCases.checkMate;\r\n        endGameCase.winner = endGameCase.user1;\r\n        endGameCase.finish = true;\r\n    }\r\n    return endGameCase;\r\n}\r\nfunction endGame() {\r\n    const theEnd = endCase();\r\n    if (theEnd.finish) {\r\n        // setTimeout(() => {\r\n        let endModalResult = new endListener_1.endResult(theEnd.user1, theEnd.user2, theEnd.winner, theEnd.how);\r\n        return endModalResult.showResult();\r\n        // }, 1000);\r\n    }\r\n    return;\r\n}\r\nexports.endGame = endGame;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/endGameCases.js?");

/***/ }),

/***/ "./src/js-components/game.js":
/*!***********************************!*\
  !*** ./src/js-components/game.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Game = void 0;\r\nconst board_1 = __webpack_require__(/*! ./board */ \"./src/js-components/board.js\");\r\nconst bishop_1 = __webpack_require__(/*! ./pieces/bishop */ \"./src/js-components/pieces/bishop.js\");\r\nconst king_1 = __webpack_require__(/*! ./pieces/king */ \"./src/js-components/pieces/king.js\");\r\nconst knight_1 = __webpack_require__(/*! ./pieces/knight */ \"./src/js-components/pieces/knight.js\");\r\nconst piece_1 = __webpack_require__(/*! ./pieces/piece */ \"./src/js-components/pieces/piece.js\");\r\nconst queen_1 = __webpack_require__(/*! ./pieces/queen */ \"./src/js-components/pieces/queen.js\");\r\nconst rook_1 = __webpack_require__(/*! ./pieces/rook */ \"./src/js-components/pieces/rook.js\");\r\nconst pawn_1 = __webpack_require__(/*! ./pieces/pawn */ \"./src/js-components/pieces/pawn.js\");\r\nconst board_2 = __webpack_require__(/*! ./board */ \"./src/js-components/board.js\");\r\nconst promotion_1 = __webpack_require__(/*! ./promotion */ \"./src/js-components/promotion.js\");\r\nconst timer_1 = __webpack_require__(/*! ./timer */ \"./src/js-components/timer.js\");\r\nconst timeHistoryContainer_1 = __webpack_require__(/*! ./timeHistoryContainer */ \"./src/js-components/timeHistoryContainer.js\");\r\nconst addMoveHistory_1 = __webpack_require__(/*! ./addMoveHistory */ \"./src/js-components/addMoveHistory.js\");\r\nconst endGameCases_1 = __webpack_require__(/*! ./endGameCases */ \"./src/js-components/endGameCases.js\");\r\nclass Game {\r\n    constructor(time, player1Name, player2Name) {\r\n        this.gameBoard = new board_1.Board;\r\n        this.gameBoard.drawBoard();\r\n        this.timeHistory = new timeHistoryContainer_1.timeHistory;\r\n        this.timeHistory.timeHistoryContainer();\r\n        //DO SPRAWDZENIA\r\n        this.lastMove = '';\r\n        //\r\n        //bicie\r\n        Game.beatCounter = 0;\r\n        //cofanie ruchów\r\n        Game.moveCounter = true;\r\n        // Timers:\r\n        Game.whitePlayerTimer = new timer_1.Timer(time, 'timer-white');\r\n        Game.blackPlayerTimer = new timer_1.Timer(time, 'timer-black');\r\n        // Players:\r\n        this.player1Name = player1Name;\r\n        this.player2Name = player2Name;\r\n        //ustawianie figur\r\n        Game.whiteKing = new king_1.King('white', `${board_2.ID[5]}`, 1);\r\n        Game.blackKing = new king_1.King('black', `${board_2.ID[5]}`, 8);\r\n        Game.whites.push(new queen_1.Queen('white', `${board_2.ID[4]}`, 1));\r\n        Game.whites.push(Game.whiteKing);\r\n        Game.blacks.push(new queen_1.Queen('black', `${board_2.ID[4]}`, 8));\r\n        Game.blacks.push(Game.blackKing);\r\n        for (let i = 3; i <= 6; i += 3) {\r\n            Game.whites.push(new bishop_1.Bishop('white', `${board_2.ID[i]}`, 1));\r\n            Game.blacks.push(new bishop_1.Bishop('black', `${board_2.ID[i]}`, 8));\r\n        }\r\n        for (let i = 2; i <= 7; i += 5) {\r\n            Game.whites.push(new knight_1.Knight('white', `${board_2.ID[i]}`, 1));\r\n            Game.blacks.push(new knight_1.Knight('black', `${board_2.ID[i]}`, 8));\r\n        }\r\n        for (let i = 1; i <= 8; i += 7) {\r\n            Game.whites.push(new rook_1.Rook('white', `${board_2.ID[i]}`, 1));\r\n            Game.blacks.push(new rook_1.Rook('black', `${board_2.ID[i]}`, 8));\r\n        }\r\n        for (let i = 1; i <= 8; i++) {\r\n            Game.whites.push(new pawn_1.Pawn('white', `${board_2.ID[i]}`, 2));\r\n            Game.blacks.push(new pawn_1.Pawn('black', `${board_2.ID[i]}`, 7));\r\n        }\r\n    }\r\n    //TURY\r\n    static changeTurn() {\r\n        if (Game.round % 2 === 0) {\r\n            Game.currentPlayer = Game.blacks;\r\n        }\r\n        ;\r\n        if (Game.round % 2 === 1) {\r\n            Game.currentPlayer = Game.whites;\r\n        }\r\n        ;\r\n        this.round++;\r\n    }\r\n    ;\r\n    static changeTimerTurn() {\r\n        if (Game.currentPlayer === Game.blacks) {\r\n            this.blackPlayerTimer.start();\r\n            this.whitePlayerTimer.pause();\r\n        }\r\n        else {\r\n            this.whitePlayerTimer.start();\r\n            this.blackPlayerTimer.pause();\r\n        }\r\n    }\r\n    ;\r\n    static endOfTime() {\r\n        if (this.whitePlayerTimer.timerHandler.innerHTML === \"00:00\" || this.blackPlayerTimer.timerHandler.innerHTML === \"00:00\") {\r\n            this.whitePlayerTimer.stop();\r\n        }\r\n    }\r\n    ;\r\n    static getWhiteTimer() {\r\n        return this.whitePlayerTimer;\r\n    }\r\n    static getBlackTimer() {\r\n        return this.blackPlayerTimer;\r\n    }\r\n    startMove(square) {\r\n        if (!promotion_1.ifPromotion()) {\r\n            let chosenPiece = Game.getPiece(square);\r\n            if (chosenPiece && Game.currentPlayer.includes(chosenPiece)) {\r\n                Game.setLastChosen(chosenPiece);\r\n                chosenPiece.move();\r\n                Game.beatCounter = 0;\r\n                Game.moveCounter = true;\r\n            }\r\n        }\r\n        endGameCases_1.endGame();\r\n    }\r\n    static getPiece(square) {\r\n        const x = square.id.charAt(0);\r\n        const y = parseInt(square.id.charAt(2));\r\n        if (square.innerHTML != '') {\r\n            for (let p of Game.whites) {\r\n                if (p.getPositionX() == x && p.getPositionY() == y) {\r\n                    return p;\r\n                }\r\n            }\r\n            for (let p of Game.blacks) {\r\n                if (p.getPositionX() == x && p.getPositionY() == y) {\r\n                    return p;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    static beat(square) {\r\n        const x = square.id.charAt(0);\r\n        const y = parseInt(square.id.charAt(2));\r\n        let p = Game.getPiece(square);\r\n        if (p) {\r\n            if (p.getColor() === 'white') {\r\n                this.whites.splice(this.whites.indexOf(p), 1);\r\n                this.beated.push(p);\r\n                piece_1.Piece.beated.push(p);\r\n                square.innerHTML = '';\r\n                Game.beatCounter = 1;\r\n            }\r\n            else {\r\n                this.blacks.splice(this.blacks.indexOf(p), 1);\r\n                this.beated.push(p);\r\n                piece_1.Piece.beated.push(p);\r\n                square.innerHTML = '';\r\n                Game.beatCounter = 1;\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    static checkingKings() {\r\n        if (Game.whiteKing.isChecked()) {\r\n            if (Game.whiteKing.isCheckmated()) {\r\n                console.log('WHITE KING CHECKMATED');\r\n            }\r\n            else {\r\n                console.log('WHITE KING CHECKED');\r\n                if (document.documentElement.lang === 'en') {\r\n                    addMoveHistory_1.addMoveHistory(`White king is checked`, '');\r\n                }\r\n                else {\r\n                    addMoveHistory_1.addMoveHistory('Szach na białym królu', '');\r\n                }\r\n            }\r\n        }\r\n        if (Game.blackKing.isChecked()) {\r\n            if (Game.blackKing.isCheckmated()) {\r\n                console.log('BLACK KING CHECKMATED');\r\n            }\r\n            else {\r\n                console.log('BLACK KING CHECKED');\r\n                if (document.documentElement.lang === 'en') {\r\n                    addMoveHistory_1.addMoveHistory(`Black king is checked`, '');\r\n                }\r\n                else {\r\n                    addMoveHistory_1.addMoveHistory('Szach na czarnym królu', '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static isQueensideCastlingPossible() {\r\n        if (Game.lastChosen.getColor() === 'white') {\r\n            for (let p of Game.whites) {\r\n                if (p instanceof rook_1.Rook && p.getPositionX() === 'A' && p.getPositionY() === 1) {\r\n                    return (!Game.whiteKing.hasMoved\r\n                        && !p.hasMoved\r\n                        && document.querySelector('#B-1').innerHTML === ''\r\n                        && document.querySelector('#C-1').innerHTML === ''\r\n                        && document.querySelector('#D-1').innerHTML === ''\r\n                        && !this.whiteKing.isChecked()\r\n                        && this.whiteKing.getDangerZones().indexOf('C-1') === -1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let p of Game.blacks) {\r\n                if (p instanceof rook_1.Rook && p.getPositionX() === 'A' && p.getPositionY() === 8) {\r\n                    return (!Game.blackKing.hasMoved\r\n                        && !p.hasMoved\r\n                        && document.querySelector('#B-8').innerHTML === ''\r\n                        && document.querySelector('#C-8').innerHTML === ''\r\n                        && document.querySelector('#D-8').innerHTML === ''\r\n                        && !this.blackKing.isChecked()\r\n                        && this.blackKing.getDangerZones().indexOf('C-8') === -1);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    static isKingsideCastlingPossible() {\r\n        if (Game.lastChosen.getColor() === 'white') {\r\n            for (let p of Game.whites) {\r\n                if (p instanceof rook_1.Rook && p.getPositionX() === 'H' && p.getPositionY() === 1) {\r\n                    return (!Game.whiteKing.hasMoved\r\n                        && !p.hasMoved\r\n                        && document.querySelector('#F-1').innerHTML === ''\r\n                        && document.querySelector('#G-1').innerHTML === ''\r\n                        && !this.whiteKing.isChecked()\r\n                        && this.whiteKing.getDangerZones().indexOf('G-1') === -1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let p of Game.blacks) {\r\n                if (p instanceof rook_1.Rook && p.getPositionX() === 'H' && p.getPositionY() === 8) {\r\n                    return (!Game.blackKing.hasMoved\r\n                        && !p.hasMoved\r\n                        && document.querySelector('#F-8').innerHTML === ''\r\n                        && document.querySelector('#G-8').innerHTML === ''\r\n                        && !this.blackKing.isChecked()\r\n                        && this.blackKing.getDangerZones().indexOf('G-8') === -1);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    //COFANIE RUCHÓW\r\n    static reverseMove() {\r\n        Game.getLastChosen().reverseLastMove(Game.getLastChosen().color);\r\n        //to wyzej działa bez argumentu\r\n        //działa\r\n        if (Game.beatCounter === 1) {\r\n            piece_1.Piece.retLast();\r\n            Game.changeTurn();\r\n            // Game.changeTimerTurn();\r\n            Game.beatCounter = 0;\r\n        }\r\n        Game.changeTimerTurn();\r\n    }\r\n    static getPieces(color) {\r\n        if (color == 'white') {\r\n            return this.whites;\r\n        }\r\n        return this.blacks;\r\n    }\r\n    static setLastChosen(piece) {\r\n        Game.lastChosen = piece;\r\n    }\r\n    static getWhites() {\r\n        return Game.whites;\r\n    }\r\n    static getBlacks() {\r\n        return Game.blacks;\r\n    }\r\n    static getWhiteKing() {\r\n        return Game.whiteKing;\r\n    }\r\n    static getBlackKing() {\r\n        return Game.blackKing;\r\n    }\r\n    static getLastChosen() {\r\n        return Game.lastChosen;\r\n    }\r\n}\r\nexports.Game = Game;\r\nGame.whites = [];\r\nGame.blacks = [];\r\nGame.beated = [];\r\nGame.currentPlayer = Game.whites;\r\nGame.round = 0;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/game.js?");

/***/ }),

/***/ "./src/js-components/pieces/bishop.js":
/*!********************************************!*\
  !*** ./src/js-components/pieces/bishop.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Bishop = void 0;\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\nconst board_1 = __webpack_require__(/*! ../board */ \"./src/js-components/board.js\");\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\n//goniec / laufer\r\nclass Bishop extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.symbol = `./../../../Projekt3-chess/static/assets/${this.color}Bishop.png`;\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        //this.removeClassActive();\r\n        const possibleMoves = [];\r\n        const coordinateX = Object.values(board_1.ID).indexOf(this.positionX) + 1;\r\n        const coordinateY = this.positionY;\r\n        // move by first diagonal\r\n        // top right\r\n        var topRight;\r\n        if (9 - coordinateX < 9 - coordinateY) {\r\n            topRight = 9 - coordinateX;\r\n        }\r\n        else {\r\n            topRight = 9 - coordinateY;\r\n        }\r\n        for (let i = 1; i < topRight; i++) {\r\n            if (document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY + i}`).classList.contains('pieceInside')) {\r\n                if (!(document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY + i}`).getElementsByTagName(\"img\")[0].classList.contains(`${this.color}`))) {\r\n                    possibleMoves.push(`${board_1.ID[coordinateX + i]}-${coordinateY + i}`);\r\n                }\r\n                ;\r\n                break;\r\n            }\r\n            else {\r\n                possibleMoves.push(`${board_1.ID[coordinateX + i]}-${coordinateY + i}`);\r\n            }\r\n        }\r\n        // down left\r\n        var downLeft;\r\n        if (coordinateY - 1 < coordinateX - 1) {\r\n            downLeft = coordinateY;\r\n        }\r\n        else {\r\n            downLeft = coordinateX;\r\n        }\r\n        for (let i = 1; i < downLeft; i++) {\r\n            if (document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY - i}`).classList.contains('pieceInside')) {\r\n                if (!(document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY - i}`).getElementsByTagName(\"img\")[0].classList.contains(`${this.color}`))) {\r\n                    possibleMoves.push(`${board_1.ID[coordinateX - i]}-${coordinateY - i}`);\r\n                }\r\n                ;\r\n                break;\r\n            }\r\n            else {\r\n                possibleMoves.push(`${board_1.ID[coordinateX - i]}-${coordinateY - i}`);\r\n            }\r\n        }\r\n        // move by second diagonal\r\n        // top left\r\n        var topLeft;\r\n        if (coordinateX < 9 - coordinateY) {\r\n            topLeft = coordinateX;\r\n        }\r\n        else {\r\n            topLeft = 9 - coordinateY;\r\n        }\r\n        for (let i = 1; i < topLeft; i++) {\r\n            if (document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY + i}`).classList.contains('pieceInside')) {\r\n                if (!(document.getElementById(`${board_1.ID[coordinateX - i]}-${coordinateY + i}`).getElementsByTagName(\"img\")[0].classList.contains(`${this.color}`))) {\r\n                    possibleMoves.push(`${board_1.ID[coordinateX - i]}-${coordinateY + i}`);\r\n                }\r\n                ;\r\n                break;\r\n            }\r\n            else {\r\n                possibleMoves.push(`${board_1.ID[coordinateX - i]}-${coordinateY + i}`);\r\n            }\r\n        }\r\n        // down right\r\n        var downRight;\r\n        if (coordinateY < 9 - coordinateX) {\r\n            downRight = coordinateY;\r\n        }\r\n        else {\r\n            downRight = 9 - coordinateX;\r\n        }\r\n        for (let i = 1; i < downRight; i++) {\r\n            if (document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY - i}`).classList.contains('pieceInside')) {\r\n                if (!(document.getElementById(`${board_1.ID[coordinateX + i]}-${coordinateY - i}`).getElementsByTagName(\"img\")[0].classList.contains(`${this.color}`))) {\r\n                    possibleMoves.push(`${board_1.ID[coordinateX + i]}-${coordinateY - i}`);\r\n                }\r\n                ;\r\n                break;\r\n            }\r\n            else {\r\n                possibleMoves.push(`${board_1.ID[coordinateX + i]}-${coordinateY - i}`);\r\n            }\r\n        }\r\n        return possibleMoves;\r\n    }\r\n    move() {\r\n        this.removeClassActive();\r\n        let possibleMovesArr = this.showPossibleMoves();\r\n        // console.log(possibleMovesArr);\r\n        possibleMovesArr = this.defendKing(possibleMovesArr);\r\n        possibleMovesArr.forEach(id => {\r\n            const square = document.querySelector(`#${id}`);\r\n            square.classList.add('active'); //<--oznaczenie wizualne na szachownicy\r\n            square.addEventListener('click', () => {\r\n                if (square.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\r\n                    if (square.innerHTML != '') {\r\n                        game_1.Game.beat(square);\r\n                    }\r\n                    //ZBIERANIE HISTORII RUCHÓW\r\n                    this.history(square);\r\n                    this.historyNotation();\r\n                    //\r\n                    this.setOnBoard(square.id.charAt(0), parseInt(square.id.charAt(2))); //<-- przeniesienie figury po kliknięciu\r\n                    this.removeClassActive();\r\n                    game_1.Game.checkingKings();\r\n                    game_1.Game.changeTimerTurn();\r\n                }\r\n            }, { capture: true });\r\n        });\r\n    }\r\n}\r\nexports.Bishop = Bishop;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/bishop.js?");

/***/ }),

/***/ "./src/js-components/pieces/king.js":
/*!******************************************!*\
  !*** ./src/js-components/pieces/king.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.King = void 0;\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\nconst pawn_1 = __webpack_require__(/*! ./pawn */ \"./src/js-components/pieces/pawn.js\");\r\nconst rook_1 = __webpack_require__(/*! ./rook */ \"./src/js-components/pieces/rook.js\");\r\nconst addMoveHistory_1 = __webpack_require__(/*! ../addMoveHistory */ \"./src/js-components/addMoveHistory.js\");\r\nclass King extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.hasMoved = false;\r\n        this.symbol = `./../../../Projekt3-chess/static/assets/${this.color}King.png`; //<-- w przyszłości bedzie tu ścieżka do img figury\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        const possibleMoves = [];\r\n        const arrayOfX = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n        const indexOfX = arrayOfX.indexOf(this.getPositionX());\r\n        for (let i = -1; i <= 1; i++) {\r\n            for (let j = -1; j <= 1; j++) {\r\n                const square = document.querySelector(`#${arrayOfX[indexOfX + i]}-${this.getPositionY() + j}`);\r\n                if (square !== null) {\r\n                    if (square.innerHTML === '')\r\n                        possibleMoves.push(`${arrayOfX[indexOfX + i]}-${this.getPositionY() + j}`);\r\n                    else if (!square.querySelector('img').classList.contains(this.color)) {\r\n                        possibleMoves.push(`${arrayOfX[indexOfX + i]}-${this.getPositionY() + j}`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return possibleMoves;\r\n    }\r\n    move() {\r\n        this.removeClassActive();\r\n        let possibleMovesArr = this.showPossibleMoves();\r\n        const dangerZones = this.getDangerZones();\r\n        possibleMovesArr = this.defendKing(possibleMovesArr);\r\n        if (game_1.Game.isQueensideCastlingPossible())\r\n            this.queensideCastling();\r\n        if (game_1.Game.isKingsideCastlingPossible())\r\n            this.kingsideCastling();\r\n        possibleMovesArr.forEach(id => {\r\n            const square = document.querySelector(`#${id}`);\r\n            if (dangerZones.indexOf(`${square.id.charAt(0)}-${parseInt(square.id.charAt(2))}`) !== -1) {\r\n                return;\r\n            }\r\n            if (square.innerHTML !== '' && !this.isPositonSafe(square.id.charAt(0), parseInt(square.id.charAt(2)))) {\r\n                return;\r\n            }\r\n            square.classList.add('active'); //<--oznaczenie wizualne na szachownicy\r\n            square.addEventListener('click', () => {\r\n                if (square.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\r\n                    if (square.innerHTML != '') {\r\n                        game_1.Game.beat(square);\r\n                    }\r\n                    //ZBIERANIE HISTORII RUCHÓW\r\n                    this.history(square);\r\n                    this.historyNotation();\r\n                    //\r\n                    this.setOnBoard(square.id.charAt(0), parseInt(square.id.charAt(2))); //<-- przeniesienie figury po kliknięciu\r\n                    this.hasMoved = true;\r\n                    this.removeClassActive();\r\n                    game_1.Game.changeTimerTurn();\r\n                }\r\n            }, { capture: true });\r\n        });\r\n    }\r\n    queensideCastling() {\r\n        if (this.color === 'white') {\r\n            const position = document.querySelector('#C-1');\r\n            position.classList.add('active');\r\n            //console.log('nadalem klase active na skrzydle hetmanskim')\r\n            console.log(document.querySelector('#C-1'));\r\n            let rook;\r\n            for (let p of game_1.Game.getWhites()) {\r\n                if (p instanceof rook_1.Rook && p.getPositionX() === 'A' && p.getPositionY() === 1)\r\n                    rook = p;\r\n            }\r\n            position.addEventListener('click', () => {\r\n                if (game_1.Game.getLastChosen() === this) {\r\n                    this.setOnBoard('C', 1);\r\n                    rook.setOnBoard('D', 1);\r\n                    if (document.documentElement.lang === 'en') {\r\n                        addMoveHistory_1.addMoveHistory('Queen side castling', this.color);\r\n                    }\r\n                    else {\r\n                        addMoveHistory_1.addMoveHistory('Roszada hetmańska', 'Biały');\r\n                    }\r\n                    this.removeClassActive();\r\n                    game_1.Game.changeTurn();\r\n                    game_1.Game.changeTimerTurn();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            const position = document.querySelector('#C-8');\r\n            position.classList.add('active');\r\n            let rook;\r\n            for (let p of game_1.Game.getBlacks()) {\r\n                if (p instanceof rook_1.Rook && p.getPositionX() === 'A' && p.getPositionY() === 8) {\r\n                    rook = p;\r\n                }\r\n            }\r\n            position.addEventListener('click', () => {\r\n                if (game_1.Game.getLastChosen() === this) {\r\n                    this.setOnBoard('C', 8);\r\n                    rook.setOnBoard('D', 8);\r\n                    if (document.documentElement.lang === 'en') {\r\n                        addMoveHistory_1.addMoveHistory('Queen side castling', this.color);\r\n                    }\r\n                    else {\r\n                        addMoveHistory_1.addMoveHistory('Roszada hetmańska', 'Czarny');\r\n                    }\r\n                    this.removeClassActive();\r\n                    game_1.Game.changeTurn();\r\n                    game_1.Game.changeTimerTurn();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    kingsideCastling() {\r\n        if (this.color === 'white') {\r\n            const position = document.querySelector('#G-1');\r\n            position.classList.add('active');\r\n            //console.log('nadalem klase active na skrzydle krolweskim')\r\n            console.log(document.querySelector('#G-1'));\r\n            let rook;\r\n            for (let p of game_1.Game.getWhites()) {\r\n                if (p instanceof rook_1.Rook && p.getPositionX() === 'H' && p.getPositionY() === 1)\r\n                    rook = p;\r\n            }\r\n            position.addEventListener('click', () => {\r\n                if (game_1.Game.getLastChosen() === this) {\r\n                    this.setOnBoard('G', 1);\r\n                    rook.setOnBoard('F', 1);\r\n                    if (document.documentElement.lang === 'en') {\r\n                        addMoveHistory_1.addMoveHistory('King side castling', this.color);\r\n                    }\r\n                    else {\r\n                        addMoveHistory_1.addMoveHistory('Roszada na skrzydle królewskim', 'Biały');\r\n                    }\r\n                    this.removeClassActive();\r\n                    game_1.Game.changeTurn();\r\n                    game_1.Game.changeTimerTurn();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            const position = document.querySelector('#G-8');\r\n            position.classList.add('active');\r\n            let rook;\r\n            for (let p of game_1.Game.getBlacks()) {\r\n                if (p instanceof rook_1.Rook && p.getPositionX() === 'H' && p.getPositionY() === 8)\r\n                    rook = p;\r\n            }\r\n            position.addEventListener('click', () => {\r\n                if (game_1.Game.getLastChosen() === this) {\r\n                    this.setOnBoard('G', 8);\r\n                    rook.setOnBoard('F', 8);\r\n                    if (document.documentElement.lang === 'en') {\r\n                        addMoveHistory_1.addMoveHistory('King side castling', this.color);\r\n                    }\r\n                    else {\r\n                        addMoveHistory_1.addMoveHistory('Roszada na skrzydle królewskim', 'Czarny');\r\n                    }\r\n                    this.removeClassActive();\r\n                    game_1.Game.changeTurn();\r\n                    game_1.Game.changeTimerTurn();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    isChecked() {\r\n        if (this.getDangerZones().indexOf(`${this.positionX}-${this.positionY}`) !== -1) {\r\n            return true;\r\n        }\r\n        else\r\n            return false;\r\n    }\r\n    isKingCheckedByThisPiece(piece) {\r\n        let moves = piece.showPossibleMoves();\r\n        if (moves.indexOf(`${this.positionX}-${this.positionY}`) !== -1) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    isCheckmated() {\r\n        //const possibleMovesArr = this.showPossibleMoves().filter(id => {\r\n        //    const dangerArr = this.getDangerZones();\r\n        //    return (dangerArr.indexOf(id) === -1);\r\n        //});\r\n        //return (this.isChecked() && possibleMovesArr.length === 0);\r\n        const possMoves = [];\r\n        for (let p of (this.color === 'white' ? game_1.Game.getWhites() : game_1.Game.getBlacks())) {\r\n            p.defendKing(p.showPossibleMoves()).forEach(id => possMoves.push(id));\r\n        }\r\n        return possMoves.length === 0;\r\n    }\r\n    areAllPossibleMovesInDangerZones() {\r\n        const possibleMoves = this.showPossibleMoves();\r\n        const dangerZones = this.getDangerZones();\r\n        let dangerZonesCounter = 0;\r\n        if (possibleMoves.length > 0) {\r\n            possibleMoves.forEach(move => {\r\n                if (dangerZones.includes(move)) {\r\n                    dangerZonesCounter += 1;\r\n                }\r\n            });\r\n            if (dangerZonesCounter === possibleMoves.length) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isPositonSafe(posX, posY) {\r\n        let safe;\r\n        const square = document.querySelector(`#${posX}-${posY}`);\r\n        let originalPiece;\r\n        for (let p of (square.querySelector('img').classList.contains('white') ? game_1.Game.getWhites() : game_1.Game.getBlacks())) {\r\n            if (p.getPositionX() === posX && p.getPositionY() === posY) {\r\n                originalPiece = p;\r\n            }\r\n        }\r\n        const originalPieceX = originalPiece.getPositionX();\r\n        const originalPieceY = originalPiece.getPositionY();\r\n        const originalKingX = this.positionX;\r\n        const originalKingY = this.positionY;\r\n        const tempPositions = Array.from(document.querySelectorAll('.board-container div')).filter(square => {\r\n            return (square.innerHTML == '');\r\n        });\r\n        const tempPieceX = tempPositions[0].id.charAt(0);\r\n        const tempPieceY = parseFloat(tempPositions[0].id.charAt(2));\r\n        //console.log(originalPiece!);\r\n        //console.log(tempPieceX, tempPieceY);\r\n        originalPiece.setOnBoard(tempPieceX, tempPieceY);\r\n        game_1.Game.changeTurn();\r\n        console.log(originalPiece);\r\n        this.setOnBoard(originalPieceX, originalPieceY);\r\n        if (this.isChecked()) {\r\n            safe = false;\r\n        }\r\n        else {\r\n            safe = true;\r\n        }\r\n        this.setOnBoard(originalKingX, originalKingY);\r\n        game_1.Game.changeTurn;\r\n        originalPiece.setOnBoard(originalPieceX, originalPieceY);\r\n        game_1.Game.changeTurn();\r\n        return safe;\r\n    }\r\n    getDangerZones() {\r\n        const dangerArr = [];\r\n        if (this.color === 'white') {\r\n            for (let p of game_1.Game.getBlacks()) {\r\n                if (!(p instanceof pawn_1.Pawn)) {\r\n                    const possibleOpponentMoves = p.showPossibleMoves();\r\n                    possibleOpponentMoves.forEach(id => {\r\n                        dangerArr.push(id);\r\n                    });\r\n                }\r\n                else {\r\n                    const possiblePawnAttacks = p.getAttacks();\r\n                    possiblePawnAttacks.forEach(attack => dangerArr.push(attack));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let p of game_1.Game.getWhites()) {\r\n                if (!(p instanceof pawn_1.Pawn)) {\r\n                    const possibleOpponentMoves = p.showPossibleMoves();\r\n                    possibleOpponentMoves.forEach(id => {\r\n                        dangerArr.push(id);\r\n                    });\r\n                }\r\n                else {\r\n                    const possiblePawnAttacks = p.getAttacks();\r\n                    possiblePawnAttacks.forEach(attack => dangerArr.push(attack));\r\n                }\r\n            }\r\n        }\r\n        return dangerArr;\r\n    }\r\n}\r\nexports.King = King;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/king.js?");

/***/ }),

/***/ "./src/js-components/pieces/knight.js":
/*!********************************************!*\
  !*** ./src/js-components/pieces/knight.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Knight = void 0;\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\nconst board_1 = __webpack_require__(/*! ../board */ \"./src/js-components/board.js\");\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\n//skoczek / koń\r\nclass Knight extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.symbol = `./../../../Projekt3-chess/static/assets/${this.color}Knight.png`;\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        //this.removeClassActive();\r\n        const allPossibleIds = []; // przechowuje wszystkie możliwe ID - łącznie z tymi na których stoją inne figury - przyda się do spr. czy stoją figury innego koloru i zbijania\r\n        this.possibleMovesIDs = []; // tu trafiają tylko możliwe ruchy figury\r\n        const coordinateX = Object.values(board_1.ID).indexOf(this.positionX) + 1;\r\n        const coordinateY = this.positionY;\r\n        // wypłenienie tablicy wszystkimi możliwymi ruchami - bez sprawdzenia czy stoją na polach inne bierki\r\n        for (let i = coordinateX - 2; i <= coordinateX + 2; i += 4) {\r\n            if (i >= 1 && i <= 8) {\r\n                for (let j = coordinateY - 1; j <= coordinateY + 1; j += 2) {\r\n                    if (j >= 1 && j <= 8) {\r\n                        allPossibleIds.push(`${board_1.ID[i]}-${j}`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let i = coordinateY - 2; i <= coordinateY + 2; i += 4) {\r\n            if (i >= 1 && i <= 8) {\r\n                for (let j = coordinateX - 1; j <= coordinateX + 1; j += 2) {\r\n                    if (j >= 1 && j <= 8) {\r\n                        allPossibleIds.push(`${board_1.ID[j]}-${i}`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Sprawdzenie czy na polu nie stoi żadna figura lub czy figura ma taki kolor jak atakująca, jesli nie to dodaję ID do właściwej - zwracanej tablicy.\r\n        allPossibleIds.forEach((id) => {\r\n            if (!(document.querySelector(`#${id}`).querySelector('img')?.classList.contains(`${this.color}`)) || document.querySelector(`#${id}`).innerHTML == '') {\r\n                this.possibleMovesIDs.push(id);\r\n            }\r\n        });\r\n        return this.possibleMovesIDs;\r\n    }\r\n    move() {\r\n        this.removeClassActive();\r\n        let possibilities = this.showPossibleMoves();\r\n        //console.log(possibilities);\r\n        possibilities = this.defendKing(possibilities);\r\n        //console.log(possibilities);\r\n        possibilities.forEach((id) => {\r\n            document.querySelector(`#${id}`).classList.add('active');\r\n        });\r\n        //adding event listener to each field with active class to perform a figure's move after click\r\n        document.querySelectorAll('.active').forEach((possMove) => {\r\n            possMove.addEventListener('click', () => {\r\n                const coorX = possMove.id.charAt(0);\r\n                const coorY = parseInt(possMove.id.charAt(2));\r\n                if (possMove.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\r\n                    if (possMove.innerHTML != '') {\r\n                        game_1.Game.beat(possMove);\r\n                    }\r\n                    //ZBIERANIE HISTORII RUCHÓW\r\n                    this.history(possMove);\r\n                    this.historyNotation();\r\n                    //\r\n                    this.setOnBoard(coorX, coorY);\r\n                    this.removeClassActive();\r\n                    game_1.Game.checkingKings();\r\n                    game_1.Game.changeTimerTurn();\r\n                    //console.log(possMove.innerHTML);\r\n                }\r\n            }, { capture: true });\r\n        });\r\n    }\r\n}\r\nexports.Knight = Knight;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/knight.js?");

/***/ }),

/***/ "./src/js-components/pieces/pawn.js":
/*!******************************************!*\
  !*** ./src/js-components/pieces/pawn.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Pawn = void 0;\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\nconst queen_1 = __webpack_require__(/*! ./queen */ \"./src/js-components/pieces/queen.js\");\r\nconst knight_1 = __webpack_require__(/*! ./knight */ \"./src/js-components/pieces/knight.js\");\r\nconst rook_1 = __webpack_require__(/*! ./rook */ \"./src/js-components/pieces/rook.js\");\r\nconst bishop_1 = __webpack_require__(/*! ./bishop */ \"./src/js-components/pieces/bishop.js\");\r\nconst addMoveHistory_1 = __webpack_require__(/*! ../addMoveHistory */ \"./src/js-components/addMoveHistory.js\");\r\nconst translateFunc_1 = __webpack_require__(/*! ../translateFunc */ \"./src/js-components/translateFunc.js\");\r\n//pion\r\nclass Pawn extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.symbol = `../../../../Projekt3-chess/static/assets/${this.color}Pawn.png`;\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        //this.removeClassActive();\r\n        let posXAttack1 = this.nextChar(this.positionX);\r\n        let posXAttack2 = this.previousChar(this.positionX);\r\n        let possibleMovesIds = [];\r\n        let possibleAttackMovesIds = [];\r\n        let possibleEnPassant = [];\r\n        if (this.color === 'white') {\r\n            let positionY1 = this.positionY + 1;\r\n            let positionY2 = document.getElementById(`${this.positionX}-${positionY1}`);\r\n            let positionY3 = this.positionY + 2;\r\n            let positionY4 = document.getElementById(`${this.positionX}-${positionY3}`);\r\n            let attack1 = document.getElementById(`${posXAttack1}-${positionY1}`);\r\n            let attack2 = document.getElementById(`${posXAttack2}-${positionY1}`);\r\n            // ATTACK\r\n            if (attack1 !== null) {\r\n                if (attack1.classList.contains('pieceInside') && !(attack1.querySelector('img').classList.contains(`${this.color}`))) {\r\n                    possibleAttackMovesIds.push(`${posXAttack1}-${positionY1}`);\r\n                }\r\n            }\r\n            if (attack2 !== null) {\r\n                if (attack2.classList.contains('pieceInside') && !(attack2.querySelector('img').classList.contains(`${this.color}`))) {\r\n                    possibleAttackMovesIds.push(`${posXAttack2}-${positionY1}`);\r\n                }\r\n            }\r\n            // MOVES\r\n            if (this.positionY === 2 && !(positionY2.matches('.pieceInside')) && !(positionY4.matches('.pieceInside'))) {\r\n                for (let i = 3; i < 5; i++) {\r\n                    possibleMovesIds.push(`${this.positionX}-${i}`);\r\n                }\r\n            }\r\n            else if (!(positionY2.matches('.pieceInside'))) {\r\n                possibleMovesIds.push(`${this.positionX}-${positionY1}`);\r\n            }\r\n        }\r\n        else {\r\n            let positionY1 = this.positionY - 1;\r\n            let positionY2 = document.getElementById(`${this.positionX}-${positionY1}`);\r\n            let attack1 = document.getElementById(`${posXAttack1}-${positionY1}`);\r\n            let attack2 = document.getElementById(`${posXAttack2}-${positionY1}`);\r\n            let positionY3 = this.positionY - 2;\r\n            let positionY4 = document.getElementById(`${this.positionX}-${positionY3}`);\r\n            // ATTACK\r\n            if (attack1 !== null) {\r\n                if (attack1.classList.contains('pieceInside') && !(attack1.querySelector('img').classList.contains(`${this.color}`))) {\r\n                    possibleAttackMovesIds.push(`${posXAttack1}-${positionY1}`);\r\n                }\r\n            }\r\n            if (attack2 !== null) {\r\n                if (attack2.classList.contains('pieceInside') && !(attack2.querySelector('img').classList.contains(`${this.color}`))) {\r\n                    possibleAttackMovesIds.push(`${posXAttack2}-${positionY1}`);\r\n                }\r\n            }\r\n            // MOVES\r\n            if (this.positionY === 7 && !(positionY2.matches('.pieceInside')) && !(positionY4.matches('.pieceInside'))) {\r\n                for (let i = 6; i > 4; i--) {\r\n                    possibleMovesIds.push(`${this.positionX}-${i}`);\r\n                }\r\n            }\r\n            else if (!(positionY2.matches('.pieceInside'))) {\r\n                possibleMovesIds.push(`${this.positionX}-${positionY1}`);\r\n            }\r\n        }\r\n        let allPossibleMovesIds = possibleMovesIds.concat(possibleAttackMovesIds).concat(possibleEnPassant);\r\n        return allPossibleMovesIds;\r\n    }\r\n    getAttacks() {\r\n        const attacksArr = [];\r\n        const arrayOfX = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n        const indexOfX = arrayOfX.indexOf(this.getPositionX());\r\n        if (this.color === 'white') {\r\n            const upLeft = document.querySelector(`#${arrayOfX[indexOfX - 1]}-${this.positionY + 1}`);\r\n            const upRight = document.querySelector(`#${arrayOfX[indexOfX + 1]}-${this.positionY + 1}`);\r\n            if (upLeft !== null)\r\n                attacksArr.push(`${arrayOfX[indexOfX - 1]}-${this.positionY + 1}`);\r\n            if (upRight !== null)\r\n                attacksArr.push(`${arrayOfX[indexOfX + 1]}-${this.positionY + 1}`);\r\n        }\r\n        else {\r\n            const downLeft = document.querySelector(`#${arrayOfX[indexOfX - 1]}-${this.positionY - 1}`);\r\n            const downRight = document.querySelector(`#${arrayOfX[indexOfX + 1]}-${this.positionY - 1}`);\r\n            if (downLeft !== null)\r\n                attacksArr.push(`${arrayOfX[indexOfX - 1]}-${this.positionY - 1}`);\r\n            if (downRight !== null)\r\n                attacksArr.push(`${arrayOfX[indexOfX + 1]}-${this.positionY - 1}`);\r\n        }\r\n        return attacksArr;\r\n    }\r\n    move() {\r\n        this.removeClassActive();\r\n        const showEnPassant = this.enPassant();\r\n        let possibilities = this.showPossibleMoves();\r\n        possibilities = this.defendKing(possibilities);\r\n        possibilities.forEach((id) => {\r\n            document.querySelector(`#${id}`).classList.add('active');\r\n        });\r\n        showEnPassant.forEach((id) => {\r\n            document.querySelector(`#${id}`).classList.add('active');\r\n            document.querySelector(`#${id}`).classList.add('en-pass');\r\n        });\r\n        //adding event listener to each field with active class to perform a figure's move after click\r\n        document.querySelectorAll('.active').forEach((possMove) => {\r\n            possMove.addEventListener('click', () => {\r\n                const coorX = possMove.id.charAt(0);\r\n                const coorY = parseInt(possMove.id.charAt(2));\r\n                const enPass1 = document.getElementById(`${coorX}-${(coorY - 1)}`);\r\n                const enPass2 = document.getElementById(`${coorX}-${(coorY + 1)}`);\r\n                if (possMove.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\r\n                    if (possMove.innerHTML != '') {\r\n                        game_1.Game.beat(possMove);\r\n                    }\r\n                    if (possMove.classList.contains('en-pass')) {\r\n                        if (this.color === 'white') {\r\n                            game_1.Game.beat(enPass1);\r\n                            possMove.classList.remove('en-pass');\r\n                            enPass1.classList.remove('pieceInside');\r\n                            //BICIE W PRZELOCIE\r\n                        }\r\n                        else {\r\n                            game_1.Game.beat(enPass2);\r\n                            possMove.classList.remove('en-pass');\r\n                            enPass2.classList.remove('pieceInside');\r\n                            //BICIE W PRZELOCIE\r\n                        }\r\n                    }\r\n                    this.history(possMove);\r\n                    this.historyNotation();\r\n                    this.setOnBoard(coorX, coorY);\r\n                    this.removeClassActive();\r\n                    game_1.Game.checkingKings();\r\n                    game_1.Game.changeTimerTurn();\r\n                    if (this.color === 'white' && this.positionY === 8 && this.parentSquare.querySelector('img').src.includes('Pawn')) {\r\n                        game_1.Game.blackPlayerTimer.pause();\r\n                        this.parentSquare.appendChild(this.pawnPromotion(this));\r\n                        this.parentSquare.classList.add('promotion');\r\n                    }\r\n                    else if (this.positionY === 1 && this.parentSquare.querySelector('img').src.includes('Pawn')) {\r\n                        game_1.Game.whitePlayerTimer.pause();\r\n                        this.parentSquare.appendChild(this.pawnPromotion(this));\r\n                        this.parentSquare.classList.add('promotion');\r\n                    }\r\n                }\r\n            }, { capture: true });\r\n        });\r\n    }\r\n    nextChar(posXRight) {\r\n        return String.fromCharCode(posXRight.charCodeAt(0) + 1);\r\n    }\r\n    previousChar(posXRight) {\r\n        return String.fromCharCode(posXRight.charCodeAt(0) - 1);\r\n    }\r\n    // promotion\r\n    pawnPromotion(pawn) {\r\n        this.removeClassActive();\r\n        const pieces = [\r\n            { pieceName: queen_1.Queen, name: \"Queen\" },\r\n            { pieceName: rook_1.Rook, name: \"Rook\" },\r\n            { pieceName: knight_1.Knight, name: \"Knight\" },\r\n            { pieceName: bishop_1.Bishop, name: \"Bishop\" }\r\n        ];\r\n        const modalWindowPawn = document.createElement(\"div\");\r\n        if (this.color === 'white') {\r\n            modalWindowPawn.className = \"modal-window-white\";\r\n            for (const piece of pieces) {\r\n                const selectableFigure = document.createElement(\"img\");\r\n                selectableFigure.setAttribute('src', `../../../static/assets/white${piece.name}.png`);\r\n                const { pieceName: PieceName } = piece;\r\n                modalWindowPawn.appendChild(selectableFigure);\r\n                selectableFigure.addEventListener('click', () => {\r\n                    document.querySelector(`#${pawn.getPositionX()}-8`).removeChild(modalWindowPawn);\r\n                    const pieceToCreate = new PieceName('white', `${pawn.getPositionX()}`, 8);\r\n                    let whites = game_1.Game.getWhites();\r\n                    whites.push(pieceToCreate);\r\n                    this.parentSquare.classList.remove('promotion');\r\n                    const pawnToRemove = whites.indexOf(pawn);\r\n                    whites.splice(pawnToRemove, 1);\r\n                    game_1.Game.changeTurn();\r\n                    if (document.documentElement.lang === 'en') {\r\n                        addMoveHistory_1.addMoveHistory(`Pawn promotion to ${pieceToCreate.constructor.name}`, '');\r\n                    }\r\n                    else {\r\n                        addMoveHistory_1.addMoveHistory(`Promocja piona na ${translateFunc_1.getName(pieceToCreate.constructor.name)}`, '');\r\n                    }\r\n                    ;\r\n                    game_1.Game.blackPlayerTimer.start();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            modalWindowPawn.className = \"modal-window-black\";\r\n            for (const piece of pieces) {\r\n                const selectableFigure = document.createElement(\"img\");\r\n                selectableFigure.setAttribute('src', `../../../static/assets/black${piece.name}.png`);\r\n                selectableFigure.style.height = '80px';\r\n                const { pieceName: PieceName } = piece;\r\n                modalWindowPawn.appendChild(selectableFigure);\r\n                selectableFigure.addEventListener('click', () => {\r\n                    document.querySelector(`#${pawn.getPositionX()}-1`).removeChild(modalWindowPawn);\r\n                    const pieceToCreate = new PieceName('black', `${pawn.getPositionX()}`, 1);\r\n                    let blacks = game_1.Game.getBlacks();\r\n                    blacks.push(pieceToCreate);\r\n                    this.parentSquare.classList.remove('promotion');\r\n                    const pawnToRemove = blacks.indexOf(pawn);\r\n                    blacks.splice(pawnToRemove, 1);\r\n                    game_1.Game.changeTurn();\r\n                    if (document.documentElement.lang === 'en') {\r\n                        addMoveHistory_1.addMoveHistory(`Pawn promotion to ${pieceToCreate.constructor.name}`, '');\r\n                    }\r\n                    else {\r\n                        addMoveHistory_1.addMoveHistory(`Promocja piona na ${translateFunc_1.getName(pieceToCreate.constructor.name)}`, '');\r\n                    }\r\n                    game_1.Game.whitePlayerTimer.start();\r\n                });\r\n            }\r\n        }\r\n        return modalWindowPawn;\r\n    }\r\n    ;\r\n    //en passant\r\n    enPassant() {\r\n        let pawnPosX1 = this.nextChar(this.positionX);\r\n        let pawnPos1 = document.getElementById(`${pawnPosX1}-${this.positionY}`);\r\n        let pawnPosX2 = this.previousChar(this.positionX);\r\n        let pawnPos2 = document.getElementById(`${pawnPosX2}-${this.positionY}`);\r\n        let positionY1 = this.positionY + 1;\r\n        let positionY2 = this.positionY - 1;\r\n        const enPassant = [];\r\n        const lastMoveArray = piece_1.Piece.movesHistory.slice();\r\n        const lastMovePawn = lastMoveArray.pop();\r\n        if (lastMovePawn) {\r\n            const differenceY = Math.abs(parseInt(lastMovePawn[1]) - parseInt(lastMovePawn[3]));\r\n            const lastX = lastMovePawn[0];\r\n            if (pawnPos1 !== null && pawnPos2 !== null) {\r\n                if (this.color === 'white'\r\n                    && this.positionY === 5\r\n                    && (pawnPos1.querySelector('img')?.src.includes('Pawn') || pawnPos2.querySelector('img')?.src.includes('Pawn'))\r\n                    && differenceY === 2) {\r\n                    if (pawnPos1.querySelector('img')?.src.includes('Pawn') && lastX === pawnPosX1) {\r\n                        enPassant.push(`${pawnPosX1}-${positionY1}`);\r\n                    }\r\n                    else if (pawnPos2.querySelector('img')?.src.includes('Pawn')) {\r\n                        enPassant.push(`${pawnPosX2}-${positionY1}`);\r\n                    }\r\n                }\r\n            }\r\n            if (pawnPos1 !== null && pawnPos2 !== null) {\r\n                if (this.color === 'black'\r\n                    && this.positionY === 4\r\n                    && (pawnPos1.querySelector('img')?.src.includes('Pawn') || pawnPos2.querySelector('img')?.src.includes('Pawn'))\r\n                    && differenceY === 2) {\r\n                    if (pawnPos1.querySelector('img')?.src.includes('Pawn') && lastX === pawnPosX1) {\r\n                        enPassant.push(`${pawnPosX1}-${positionY2}`);\r\n                    }\r\n                    else {\r\n                        enPassant.push(`${pawnPosX2}-${positionY2}`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return enPassant;\r\n    }\r\n}\r\nexports.Pawn = Pawn;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/pawn.js?");

/***/ }),

/***/ "./src/js-components/pieces/piece.js":
/*!*******************************************!*\
  !*** ./src/js-components/pieces/piece.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Piece = void 0;\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\nconst addMoveHistory_1 = __webpack_require__(/*! ../addMoveHistory */ \"./src/js-components/addMoveHistory.js\");\r\nconst translateFunc_1 = __webpack_require__(/*! ../translateFunc */ \"./src/js-components/translateFunc.js\");\r\nclass Piece {\r\n    constructor(color, positionX, positionY) {\r\n        this.symbol = ''; //<-- domyślnie ustawiłem puste, bo każda figura ma inny symbol\r\n        this.color = color;\r\n        this.positionX = positionX;\r\n        this.positionY = positionY;\r\n        this.possibleMovesIDs = this.showPossibleMoves();\r\n        this.parentSquare = document.getElementById(`${this.positionX}-${this.positionY}`); //<-- parentSquare przechowuje diva, w którym obecnie znajduje się figura\r\n        this.moveTimeArray = [];\r\n        Piece.movesHistory = [];\r\n        this.lastMove = '';\r\n        this.moves = [];\r\n    }\r\n    setOnBoard(pX, pY) {\r\n        //w pierwszych dwóch linijkach usuwamy figurę z obecnego miejsca, następnie ustawiamy w nowym\r\n        this.parentSquare.innerHTML = \"\";\r\n        this.parentSquare.classList.remove('pieceInside');\r\n        const img = document.createElement('img');\r\n        img.classList.add('image');\r\n        img.classList.add(`${this.color}`.toLowerCase());\r\n        img.setAttribute('src', this.symbol);\r\n        this.updatePosition(pX, pY);\r\n        this.parentSquare.appendChild(img);\r\n        const imgContainer = img.parentElement;\r\n        imgContainer.classList.add('pieceInside');\r\n        game_1.Game.changeTurn();\r\n        //Game.changeTimerTurn();\r\n        game_1.Game.endOfTime();\r\n    }\r\n    updatePosition(pX, pY) {\r\n        this.positionX = pX;\r\n        this.positionY = pY;\r\n        this.parentSquare = document.getElementById(`${this.positionX}-${this.positionY}`);\r\n    }\r\n    removeClassActive() {\r\n        let elems = document.querySelectorAll('.active');\r\n        for (var i = 0; i < elems.length; i++) {\r\n            elems[i].classList.remove('active');\r\n            if (elems[i].classList.contains('en-pass')) {\r\n                elems[i].classList.remove('en-pass');\r\n            }\r\n        }\r\n    }\r\n    // HISTORIA RUCHÓW\r\n    history(square) {\r\n        const fromPositionX = this.getPositionX();\r\n        const fromPositionY = this.getPositionY().toString();\r\n        const toPositionX = `${(square).id.charAt(0)}`;\r\n        const toPositionY = `${parseInt((square).id.charAt(2))}`;\r\n        Piece.movesHistory.push([fromPositionX, fromPositionY, toPositionX, toPositionY]);\r\n        this.moves.push([fromPositionX, fromPositionY, toPositionX, toPositionY]);\r\n    }\r\n    //OPIS RUCHÓW\r\n    historyNotation() {\r\n        let name;\r\n        let movedTo;\r\n        let movedFrom;\r\n        let timeStampWhite = document.querySelector('#timer-white')?.innerHTML;\r\n        let timeStampBlack = document.querySelector('#timer-black')?.innerHTML;\r\n        const time = game_1.Game.round % 2 === 0 ? timeStampWhite : timeStampBlack;\r\n        let beatedPiece = Piece.beated.pop();\r\n        const movesHistoryClone = Piece.movesHistory.slice();\r\n        const createNotation = movesHistoryClone.pop();\r\n        if (typeof createNotation === 'undefined')\r\n            return;\r\n        if (typeof createNotation[2] === 'undefined')\r\n            return;\r\n        if (typeof createNotation[0] === 'undefined')\r\n            return;\r\n        if (!time)\r\n            return;\r\n        //CZAS WYKONANIA RUCHU\r\n        this.moveTimeArray.push(time);\r\n        if (document.documentElement.lang === 'pl') {\r\n            movedFrom = 'poruszył/a się z pola';\r\n            movedTo = 'na pole';\r\n            name = translateFunc_1.getName(this.constructor.name);\r\n            //RUCHY\r\n            const descriptive = `${name} ${movedFrom} ${createNotation[0]}-${createNotation[1]} ${movedTo} ${createNotation[2]}-${createNotation[3]}`;\r\n            this.lastMove = descriptive;\r\n            //NOTACJA DLA BICIA\r\n            if (beatedPiece) {\r\n                const descriptive = `${translateFunc_1.getName(beatedPiece.color)} ${translateFunc_1.getName(beatedPiece.constructor.name).toLowerCase()} został zbity przez ${translateFunc_1.getName(this.color).toLowerCase()} ${name.toLowerCase()}`;\r\n                this.lastMove = descriptive;\r\n            }\r\n            addMoveHistory_1.addMoveHistory(this.lastMove, `${time} ${translateFunc_1.getName(this.color)}`);\r\n            //EN VERSION\r\n        }\r\n        else if (document.documentElement.lang === 'en') {\r\n            movedFrom = 'moved from';\r\n            movedTo = 'to';\r\n            name = this.constructor.name;\r\n            //RUCHY\r\n            const descriptive = `${name} ${movedFrom} ${createNotation[0]}-${createNotation[1]} ${movedTo} ${createNotation[2]}-${createNotation[3]}`;\r\n            this.lastMove = descriptive;\r\n            //BICIE\r\n            if (beatedPiece) {\r\n                const descriptive = `${beatedPiece.color} ${beatedPiece.constructor.name.toLowerCase()} was beaten by ${this.color.toLowerCase()} ${name.toLowerCase()}`;\r\n                this.lastMove = descriptive;\r\n            }\r\n            addMoveHistory_1.addMoveHistory(this.lastMove, `${time} ${this.color}`);\r\n        }\r\n    }\r\n    //COFANIE RUCHÓW\r\n    reverseLastMove(color) {\r\n        const lastMove = this.moves;\r\n        if (this.moveTimeArray.length === 0) {\r\n            return;\r\n        }\r\n        ;\r\n        if (lastMove.length === 0) {\r\n            return;\r\n        }\r\n        ;\r\n        const popLastMove = lastMove.pop();\r\n        this.removeClassActive();\r\n        if (popLastMove) {\r\n            const positionX = popLastMove[0];\r\n            const positionY = popLastMove[1];\r\n            if (positionX && positionY) {\r\n                this.setOnBoard(positionX.toUpperCase(), parseInt(positionY));\r\n                color === 'white' ? this.reverseTimeWhite() : this.reverseTimeBlack();\r\n            }\r\n        }\r\n    }\r\n    static retLast() {\r\n        const black = game_1.Game.getBlacks();\r\n        const white = game_1.Game.getWhites();\r\n        const last = game_1.Game.beated.pop();\r\n        const color = last?.color;\r\n        console.log(last.positionX, last.positionY, last);\r\n        if (!last) {\r\n            return;\r\n        }\r\n        ;\r\n        if (color === 'black') {\r\n            console.log(color, 1);\r\n            last.setOnBoard(last.positionX, last.positionY);\r\n            black.push(last);\r\n            return;\r\n        }\r\n        else {\r\n            console.log(color, 3);\r\n            last.setOnBoard(last.positionX, last.positionY);\r\n            white.push(last);\r\n            return;\r\n        }\r\n    }\r\n    reverseTimeWhite() {\r\n        if (this.moveTimeArray.length === 0) {\r\n            return;\r\n        }\r\n        ;\r\n        const time = this.moveTimeArray.pop();\r\n        if (!time) {\r\n            return;\r\n        }\r\n        ;\r\n        game_1.Game.getWhiteTimer().setTimer(time);\r\n        const timerWhite = document.querySelector('#timer-white');\r\n        timerWhite.innerHTML = time;\r\n    }\r\n    reverseTimeBlack() {\r\n        if (this.moveTimeArray.length === 0) {\r\n            return;\r\n        }\r\n        ;\r\n        const time = this.moveTimeArray.pop();\r\n        if (!time) {\r\n            return;\r\n        }\r\n        ;\r\n        game_1.Game.getBlackTimer().setTimer(time);\r\n        const timerBlack = document.querySelector('#timer-black');\r\n        timerBlack.innerHTML = time;\r\n    }\r\n    getPositionX() {\r\n        return this.positionX;\r\n    }\r\n    getPositionY() {\r\n        return this.positionY;\r\n    }\r\n    getColor() {\r\n        return this.color;\r\n    }\r\n    defendKing(possibleMoves) {\r\n        const initialX = this.positionX;\r\n        const initialY = this.positionY;\r\n        const king = this.color === 'white' ? game_1.Game.getWhiteKing() : game_1.Game.getBlackKing();\r\n        const defendingIDs = [];\r\n        possibleMoves.forEach(move => {\r\n            const posX = move.charAt(0);\r\n            const posY = parseFloat(move.charAt(2));\r\n            if (document.querySelector(`#${move}`).innerHTML === '') {\r\n                this.setOnBoard(posX, posY);\r\n                game_1.Game.changeTurn();\r\n                if (!king.isChecked())\r\n                    defendingIDs.push(move);\r\n            }\r\n            else {\r\n                let originalPiece;\r\n                if (this.color === 'white') {\r\n                    for (let p of game_1.Game.getBlacks()) {\r\n                        if (p.getPositionX() === posX && p.getPositionY() === posY) {\r\n                            originalPiece = p;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (let p of game_1.Game.getWhites()) {\r\n                        if (p.getPositionX() === posX && p.getPositionY() === posY) {\r\n                            originalPiece = p;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (king.isChecked()) {\r\n                    if (king.isKingCheckedByThisPiece(originalPiece)) {\r\n                        console.log(123);\r\n                        defendingIDs.push(`${originalPiece.getPositionX()}-${originalPiece.getPositionY()}`);\r\n                    }\r\n                }\r\n                else {\r\n                    defendingIDs.push(`${originalPiece.getPositionX()}-${originalPiece.getPositionY()}`);\r\n                }\r\n            }\r\n        });\r\n        this.setOnBoard(initialX, initialY);\r\n        game_1.Game.changeTurn();\r\n        return defendingIDs;\r\n    }\r\n}\r\nexports.Piece = Piece;\r\nPiece.beated = [];\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/piece.js?");

/***/ }),

/***/ "./src/js-components/pieces/queen.js":
/*!*******************************************!*\
  !*** ./src/js-components/pieces/queen.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Queen = void 0;\r\nconst board_1 = __webpack_require__(/*! ../board */ \"./src/js-components/board.js\");\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\n// import { endGame } from '../endGameCases';\r\n//królowa / hetman\r\nclass Queen extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.symbol = `./../../../Projekt3-chess/static/assets/${this.color}Queen.png`;\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        const allPossibleMoves = [];\r\n        this.collectAllPossibleMoves().forEach(id => {\r\n            allPossibleMoves.push(id);\r\n        });\r\n        return allPossibleMoves;\r\n    }\r\n    move() {\r\n        this.removeClassActive();\r\n        // const movesShow:MovesShow =(id:string)=>{\r\n        //     const movesPossibilities = [...document.querySelectorAll(`#${id}`)];\r\n        //         movesPossibilities.forEach(el=>{\r\n        //                 el.classList.add('active');\r\n        //         })\r\n        //  }\r\n        this.defendKing(this.showPossibleMoves()).forEach(id => {\r\n            document.querySelector(`#${id}`).classList.add('active');\r\n            // movesShow(id)\r\n        });\r\n        const squares = [...document.querySelectorAll('.active')];\r\n        squares.forEach(square => {\r\n            square.addEventListener('click', () => {\r\n                if ((square).classList.contains('active')\r\n                    && (game_1.Game.getLastChosen() === this)) {\r\n                    if (square.innerHTML != '') {\r\n                        game_1.Game.beat(square);\r\n                    }\r\n                    //ZBIERANIE HISTORII RUCHÓW\r\n                    this.history(square);\r\n                    this.historyNotation();\r\n                    //\r\n                    this.setOnBoard((square).id.charAt(0), parseInt((square).id.charAt(2)));\r\n                    this.removeClassActive();\r\n                    game_1.Game.checkingKings();\r\n                    game_1.Game.changeTimerTurn();\r\n                    // endGame();\r\n                }\r\n            }, { capture: true });\r\n        });\r\n    }\r\n    collectAllPossibleMoves() {\r\n        const coordinateX = Object.values(board_1.ID).indexOf(this.positionX) + 1;\r\n        const moves = [];\r\n        const moveUp = () => {\r\n            for (let i = this.positionY + 1; i < 9; i++) {\r\n                const doc = document.getElementById(`${this.positionX}-${i}`);\r\n                const checker = doc.classList.contains('pieceInside');\r\n                const colorCheck = doc.querySelector('img')?.classList.contains(`${this.color}`);\r\n                if (checker) {\r\n                    if (!colorCheck) {\r\n                        moves.push(`${this.positionX}-${i}`);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    moves.push(`${this.positionX}-${i}`);\r\n                    // return;\r\n                }\r\n            }\r\n        };\r\n        const moveDown = () => {\r\n            for (let j = this.positionY - 1; j > 0; j--) {\r\n                const doc = document.getElementById(`${this.positionX}-${j}`);\r\n                const checker = doc.classList.contains('pieceInside');\r\n                const colorCheck = doc.querySelector('img')?.classList.contains(`${this.color}`);\r\n                if (checker) {\r\n                    if (!colorCheck) {\r\n                        moves.push(`${this.positionX}-${j}`);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    moves.push(`${this.positionX}-${j}`);\r\n                }\r\n            }\r\n        };\r\n        const moveRight = () => {\r\n            for (let i = coordinateX + 1; i < 9; i++) {\r\n                const doc = document.getElementById(`${board_1.ID[i]}-${this.positionY}`);\r\n                const checker = doc.classList.contains('pieceInside');\r\n                const colorCheck = doc.querySelector('img')?.classList.contains(`${this.color}`);\r\n                if (checker) {\r\n                    if (!colorCheck) {\r\n                        moves.push(`${board_1.ID[i]}-${this.positionY}`);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    moves.push(`${board_1.ID[i]}-${this.positionY}`);\r\n                }\r\n            }\r\n        };\r\n        const moveLeft = () => {\r\n            for (let i = coordinateX - 1; i > 0; i--) {\r\n                const doc = document.getElementById(`${board_1.ID[i]}-${this.positionY}`);\r\n                const checker = doc.classList.contains('pieceInside');\r\n                const colorCheck = doc.querySelector('img')?.classList.contains(`${this.color}`);\r\n                if (checker) {\r\n                    if (!colorCheck) {\r\n                        moves.push(`${board_1.ID[i]}-${this.positionY}`);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    moves.push(`${board_1.ID[i]}-${this.positionY}`);\r\n                }\r\n            }\r\n        };\r\n        const diagonalMoves = () => {\r\n            // top right\r\n            let position;\r\n            if (9 - coordinateX < 9 - this.positionY) {\r\n                position = 9 - coordinateX;\r\n            }\r\n            else {\r\n                position = 9 - this.positionY;\r\n            }\r\n            for (let i = 1; i < position; i++) {\r\n                const doc = document.getElementById(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`);\r\n                const checker = doc.classList.contains('pieceInside');\r\n                const colorCheck = doc.querySelector(\"img\")?.classList.contains(`${this.color}`);\r\n                if (checker) {\r\n                    if (!colorCheck) {\r\n                        moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`);\r\n                    }\r\n                    break;\r\n                }\r\n                else {\r\n                    moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`);\r\n                }\r\n            }\r\n            // down left\r\n            if (this.positionY - 1 < coordinateX - 1) {\r\n                position = this.positionY;\r\n            }\r\n            else {\r\n                position = coordinateX;\r\n            }\r\n            for (let i = 1; i < position; i++) {\r\n                const doc = document.getElementById(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`);\r\n                const checker = doc.classList.contains('pieceInside');\r\n                const colorCheck = doc.querySelector(\"img\")?.classList.contains(`${this.color}`);\r\n                if (checker) {\r\n                    if (!colorCheck) {\r\n                        moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`);\r\n                    }\r\n                    break;\r\n                }\r\n                else {\r\n                    moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`);\r\n                }\r\n            }\r\n            // top left\r\n            if (coordinateX < 9 - this.positionY) {\r\n                position = coordinateX;\r\n            }\r\n            else {\r\n                position = 9 - this.positionY;\r\n            }\r\n            for (let i = 1; i < position; i++) {\r\n                const doc = document.getElementById(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`);\r\n                const checker = doc.classList.contains('pieceInside');\r\n                const colorCheck = doc.querySelector(\"img\")?.classList.contains(`${this.color}`);\r\n                if (checker) {\r\n                    if (!colorCheck) {\r\n                        moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`);\r\n                    }\r\n                    break;\r\n                }\r\n                else {\r\n                    moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`);\r\n                }\r\n            }\r\n            // down right\r\n            if (this.positionY < 9 - coordinateX) {\r\n                position = this.positionY;\r\n            }\r\n            else {\r\n                position = 9 - coordinateX;\r\n            }\r\n            for (let i = 1; i < position; i++) {\r\n                const doc = document.getElementById(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`);\r\n                const checker = doc.classList.contains('pieceInside');\r\n                const colorCheck = doc.querySelector(\"img\")?.classList.contains(`${this.color}`);\r\n                if (checker) {\r\n                    if (!colorCheck) {\r\n                        moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`);\r\n                    }\r\n                    break;\r\n                }\r\n                else {\r\n                    moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`);\r\n                }\r\n            }\r\n        };\r\n        diagonalMoves();\r\n        moveUp();\r\n        moveDown();\r\n        moveLeft();\r\n        moveRight();\r\n        return moves;\r\n    }\r\n}\r\nexports.Queen = Queen;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/queen.js?");

/***/ }),

/***/ "./src/js-components/pieces/rook.js":
/*!******************************************!*\
  !*** ./src/js-components/pieces/rook.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n\"use stricte\";\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Rook = void 0;\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\n//wieża\r\nclass Rook extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.hasMoved = false;\r\n        this.symbol = `./../../../Projekt3-chess/static/assets/${this.color}Rook.png`;\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        //this.removeClassActive();\r\n        const arrayOfX = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n        // const indexOfX:number = arrayOfX.indexOf(this.getPositionX());\r\n        const PossibleMoves = [];\r\n        const rookLineX = this.getPositionX();\r\n        const rookLineY = this.getPositionY();\r\n        const checkYAxis = () => {\r\n            // top\r\n            //console.log(rookLineX,rookLineY)\r\n            for (let i = rookLineY + 1; i <= 8; i++) {\r\n                let squareY = document.querySelector(`#${rookLineX}-${i}`);\r\n                if (!(squareY?.querySelector('img')) || squareY.innerHTML === \"\") {\r\n                    if (squareY != null)\r\n                        // squareY.classList.add('active');\r\n                        PossibleMoves.push(`${rookLineX}-${i}`);\r\n                }\r\n                else {\r\n                    if (!(squareY?.querySelector('img')?.classList.contains(this.color))) {\r\n                        PossibleMoves.push(`${rookLineX}-${i}`);\r\n                        break;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            // bot\r\n            for (let i = rookLineY - 1; i > 0; i--) {\r\n                let squareY = document.querySelector(`#${rookLineX}-${i}`);\r\n                if (!(squareY?.querySelector('img')) || squareY.innerHTML === \"\") {\r\n                    if (squareY != null)\r\n                        // squareY.classList.add('active');\r\n                        PossibleMoves.push(`${rookLineX}-${i}`);\r\n                }\r\n                else {\r\n                    if (!(squareY?.querySelector('img')?.classList.contains(this.color))) {\r\n                        PossibleMoves.push(`${rookLineX}-${i}`);\r\n                        break;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        const checkXAxis = () => {\r\n            // right\r\n            const clickedElementIndex = arrayOfX.indexOf(rookLineX);\r\n            for (let i = clickedElementIndex; i <= 7; i++) {\r\n                let squareY = document.querySelector(`#${arrayOfX[i + 1]}-${rookLineY}`);\r\n                if (!(squareY?.querySelector('img')) || squareY.innerHTML === \"\") {\r\n                    if (squareY != null)\r\n                        // squareY.classList.add('active');\r\n                        PossibleMoves.push(`${arrayOfX[i + 1]}-${rookLineY}`);\r\n                }\r\n                else {\r\n                    if (!(squareY?.querySelector('img')?.classList.contains(this.color))) {\r\n                        PossibleMoves.push(`${arrayOfX[i + 1]}-${rookLineY}`);\r\n                        break;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            // left\r\n            for (let i = clickedElementIndex; i > 0; i--) {\r\n                let squareY = document.querySelector(`#${arrayOfX[i - 1]}-${rookLineY}`);\r\n                if (!(squareY?.querySelector('img')) || squareY.innerHTML === \"\") {\r\n                    if (squareY != null)\r\n                        // squareY.classList.add('active');\r\n                        PossibleMoves.push(`${arrayOfX[i - 1]}-${rookLineY}`);\r\n                }\r\n                else {\r\n                    if (!(squareY?.querySelector('img')?.classList.contains(this.color))) {\r\n                        PossibleMoves.push(`${arrayOfX[i - 1]}-${rookLineY}`);\r\n                        break;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        checkYAxis();\r\n        checkXAxis();\r\n        // const squares:NodeList = document.querySelectorAll('.board-container div');\r\n        // squares.forEach(square => {\r\n        //     square.addEventListener('click', (e) => {\r\n        //         let pickedFigure = e.currentTarget;\r\n        //         if(!((square as HTMLElement).classList.contains('pieceInside')) && (square as HTMLElement).classList.contains('active')   && (Game.getLastChosen() === this)){\r\n        //             this.setOnBoard((square as HTMLElement).id.charAt(0), parseInt((square as HTMLElement).id.charAt(2)));\r\n        //             squares.forEach(square => (square as HTMLElement).classList.remove('active'));\r\n        //         }\r\n        //     });\r\n        // });\r\n        return PossibleMoves;\r\n    }\r\n    move() {\r\n        this.removeClassActive();\r\n        let possibleMovesArr = this.showPossibleMoves();\r\n        possibleMovesArr = this.defendKing(possibleMovesArr);\r\n        possibleMovesArr.forEach(id => {\r\n            const square = document.querySelector(`#${id}`);\r\n            square.classList.add('active'); //<--oznaczenie wizualne na szachownicy\r\n            square.addEventListener('click', () => {\r\n                if (square.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\r\n                    if (square.innerHTML != '') {\r\n                        game_1.Game.beat(square);\r\n                    }\r\n                    //ZBIERANIE HISTORII RUCHÓW\r\n                    this.history(square);\r\n                    this.historyNotation();\r\n                    //\r\n                    this.setOnBoard(square.id.charAt(0), parseInt(square.id.charAt(2))); //<-- przeniesienie figury po kliknięciu\r\n                    this.hasMoved = true;\r\n                    this.removeClassActive();\r\n                    game_1.Game.checkingKings();\r\n                    game_1.Game.changeTimerTurn();\r\n                }\r\n            }, { capture: true });\r\n        });\r\n    }\r\n}\r\nexports.Rook = Rook;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/rook.js?");

/***/ }),

/***/ "./src/js-components/promotion.js":
/*!****************************************!*\
  !*** ./src/js-components/promotion.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ifPromotion = void 0;\r\nconst board_1 = __webpack_require__(/*! ./board */ \"./src/js-components/board.js\");\r\nfunction ifPromotion() {\r\n    const possiblePromotion = [];\r\n    for (var i = 1; i < 9; i++) {\r\n        let idPossiblePromotion1 = `${board_1.ID[i]}-1`;\r\n        let idPossiblePromotion2 = `${board_1.ID[i]}-8`;\r\n        possiblePromotion.push(idPossiblePromotion1, idPossiblePromotion2);\r\n    }\r\n    const promotion = [];\r\n    possiblePromotion.forEach((possibility) => {\r\n        if (document.getElementById(possibility).classList.contains('promotion')) {\r\n            promotion.push(possibility);\r\n        }\r\n    });\r\n    return promotion.length > 0;\r\n}\r\nexports.ifPromotion = ifPromotion;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/promotion.js?");

/***/ }),

/***/ "./src/js-components/starting_page/lang.js":
/*!*************************************************!*\
  !*** ./src/js-components/starting_page/lang.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\r\nfunction lang() {\r\n    const divLang = document.createElement(\"div\");\r\n    divLang.className = \"lang\";\r\n    const imgEng = document.createElement(\"img\");\r\n    const srcEng = \"../../../../Projekt3-chess/static/assets/eng.png\";\r\n    imgEng.setAttribute('src', srcEng);\r\n    imgEng.className = \"eng\";\r\n    const imgPl = document.createElement(\"img\");\r\n    const srcPl = \"../../../../Projekt3-chess/static/assets/pl.png\";\r\n    imgPl.setAttribute('src', srcPl);\r\n    imgPl.className = \"pl\";\r\n    divLang.appendChild(imgEng);\r\n    divLang.appendChild(imgPl);\r\n    return divLang;\r\n}\r\nmodule.exports = lang;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/starting_page/lang.js?");

/***/ }),

/***/ "./src/js-components/starting_page/logo.js":
/*!*************************************************!*\
  !*** ./src/js-components/starting_page/logo.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\r\nfunction logo() {\r\n    const divLogo = document.createElement(\"div\");\r\n    divLogo.className = \"logo\";\r\n    const imgLogo = document.createElement(\"img\");\r\n    const src = \"../../../../Projekt3-chess/static/assets/CodersChess.png\";\r\n    imgLogo.setAttribute('src', src);\r\n    imgLogo.addEventListener(\"click\", function () {\r\n        location.reload();\r\n    });\r\n    divLogo.appendChild(imgLogo);\r\n    return divLogo;\r\n}\r\nmodule.exports = logo;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/starting_page/logo.js?");

/***/ }),

/***/ "./src/js-components/starting_page/menuContainer.js":
/*!**********************************************************!*\
  !*** ./src/js-components/starting_page/menuContainer.js ***!
  \**********************************************************/
/***/ ((module) => {

eval("\r\nfunction title() {\r\n    const titleDiv = document.createElement(\"div\");\r\n    titleDiv.className = \"menuTitle\";\r\n    const title = document.createElement(\"h2\");\r\n    title.innerHTML = \"USTAWIENIA GRY\";\r\n    if (document.documentElement.lang === 'en') {\r\n        title.innerHTML = \"GAME SETTINGS\";\r\n    }\r\n    titleDiv.appendChild(title);\r\n    return title;\r\n}\r\nfunction menuNames() {\r\n    const nameDiv = document.createElement(\"div\");\r\n    nameDiv.className = \"menuNames\";\r\n    const title = document.createElement(\"h4\");\r\n    title.innerHTML = \"IMIONA GRACZY\";\r\n    const inputDiv = document.createElement(\"div\");\r\n    const field1 = document.createElement(\"fieldset\");\r\n    const legend1 = document.createElement(\"legend\");\r\n    legend1.innerHTML = \"Białe | nazwa gracza\";\r\n    const player1 = document.createElement(\"input\");\r\n    player1.type = \"text\";\r\n    player1.minLength = 2;\r\n    player1.maxLength = 20;\r\n    player1.id = \"player1-input\";\r\n    player1.required = true;\r\n    player1.placeholder = \"Brajan\";\r\n    field1.appendChild(legend1);\r\n    field1.appendChild(player1);\r\n    const field2 = document.createElement(\"fieldset\");\r\n    const legend2 = document.createElement(\"legend\");\r\n    legend2.innerHTML = \"Czarne | nazwa gracza\";\r\n    const player2 = document.createElement(\"input\");\r\n    player2.type = \"text\";\r\n    player2.minLength = 2;\r\n    player2.maxLength = 20;\r\n    player2.id = \"player2-input\";\r\n    player2.required = true;\r\n    player2.placeholder = \"Jessica\";\r\n    if (document.documentElement.lang === 'en') {\r\n        title.innerHTML = \"PLAYER NAMES\";\r\n        legend1.innerHTML = \"White | player name\";\r\n        legend2.innerHTML = \"Black | player name\";\r\n    }\r\n    field2.appendChild(legend2);\r\n    field2.appendChild(player2);\r\n    inputDiv.appendChild(field1);\r\n    inputDiv.appendChild(field2);\r\n    nameDiv.appendChild(title);\r\n    nameDiv.appendChild(inputDiv);\r\n    return nameDiv;\r\n}\r\nfunction time() {\r\n    const timeDiv = document.createElement(\"div\");\r\n    timeDiv.className = \"menuTime\";\r\n    const title = document.createElement(\"h4\");\r\n    title.className = \"title-time\";\r\n    title.innerHTML = \"CZAS GRY\";\r\n    const inMinutes = document.createElement(\"span\");\r\n    inMinutes.innerHTML = \"[W MINUTACH]\";\r\n    title.appendChild(inMinutes);\r\n    const rangeSlider = document.createElement(\"div\");\r\n    rangeSlider.className = \"range-slider\";\r\n    const span = document.createElement(\"span\");\r\n    span.className = \"rs-label\";\r\n    span.innerHTML = \"60\";\r\n    const range = document.createElement(\"input\");\r\n    range.type = \"range\";\r\n    range.className = \"rs-range\";\r\n    range.min = \"60\";\r\n    range.max = \"180\";\r\n    range.step = \"10\";\r\n    if (document.documentElement.lang === 'en') {\r\n        title.innerHTML = \"GAME TIME\";\r\n        inMinutes.innerHTML = '[IN MINUTES]';\r\n    }\r\n    rangeSlider.addEventListener(\"input\", showSliderValue, false);\r\n    function showSliderValue() {\r\n        span.innerHTML = range.value;\r\n    }\r\n    rangeSlider.appendChild(range);\r\n    rangeSlider.appendChild(span);\r\n    timeDiv.appendChild(title);\r\n    timeDiv.appendChild(rangeSlider);\r\n    return timeDiv;\r\n}\r\nfunction patCheckList() {\r\n    const titleDiv = document.createElement(\"div\");\r\n    titleDiv.className = \"menuCheckList\";\r\n    const title = document.createElement(\"h4\");\r\n    title.innerHTML = \"PAT JAKO WYGRANA\";\r\n    // const label3 = document.createElement(\"label\");\r\n    // const input3 = document.createElement(\"input\");\r\n    // input3.type = \"radio\";\r\n    // input3.id = \"pat2\";\r\n    // input3.name = \"pat\";\r\n    // input3.checked = true;\r\n    // const inputSpan3 = document.createElement(\"span\");\r\n    // inputSpan3.innerHTML = \"REMIS\";\r\n    // label3.appendChild(input3);\r\n    // label3.appendChild(inputSpan3);\r\n    const label1 = document.createElement(\"label\");\r\n    const input1 = document.createElement(\"input\");\r\n    input1.type = \"radio\";\r\n    input1.id = \"pat1\";\r\n    input1.name = \"pat\";\r\n    input1.checked = true;\r\n    const inputSpan1 = document.createElement(\"span\");\r\n    inputSpan1.innerHTML = \"PATUJĄCEGO\";\r\n    label1.appendChild(input1);\r\n    label1.appendChild(inputSpan1);\r\n    const label2 = document.createElement(\"label\");\r\n    const input2 = document.createElement(\"input\");\r\n    input2.type = \"radio\";\r\n    input2.id = \"pat2\";\r\n    input2.name = \"pat\";\r\n    const inputSpan2 = document.createElement(\"span\");\r\n    inputSpan2.innerHTML = \"PATOWANEGO\";\r\n    label2.appendChild(input2);\r\n    label2.appendChild(inputSpan2);\r\n    titleDiv.appendChild(title);\r\n    titleDiv.appendChild(label1);\r\n    titleDiv.appendChild(label2);\r\n    // titleDiv.appendChild(label3);\r\n    if (document.documentElement.lang === 'en') {\r\n        title.innerHTML = \"STALEMATE AS\";\r\n        inputSpan1.innerHTML = \"LOOSE FOR STALEMATED PLAYER\";\r\n        inputSpan2.innerHTML = \"WIN FOR STALEMATED PLAYER\";\r\n    }\r\n    return titleDiv;\r\n}\r\nfunction startButton() {\r\n    const startButtonContainer = document.createElement(\"div\");\r\n    startButtonContainer.className = \"start-button\";\r\n    const startButtonText = document.createElement(\"p\");\r\n    startButtonText.innerHTML = \"ROZPOCZNIJ GRĘ!\";\r\n    if (document.documentElement.lang === 'en') {\r\n        startButtonText.innerHTML = \"PLAY\";\r\n    }\r\n    startButtonContainer.appendChild(startButtonText);\r\n    return startButtonContainer;\r\n}\r\nfunction menuContainer() {\r\n    const menu = document.createElement(\"div\");\r\n    menu.className = \"menuContainer\";\r\n    menu.appendChild(title());\r\n    menu.appendChild(menuNames());\r\n    menu.appendChild(time());\r\n    menu.appendChild(patCheckList());\r\n    menu.appendChild(startButton());\r\n    return menu;\r\n}\r\nmodule.exports = menuContainer;\r\n// document.body.appendChild(menuContainer());\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/starting_page/menuContainer.js?");

/***/ }),

/***/ "./src/js-components/timeHistoryContainer.js":
/*!***************************************************!*\
  !*** ./src/js-components/timeHistoryContainer.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.timeHistory = void 0;\r\nclass timeHistory {\r\n    timeHistoryContainer() {\r\n        const timeHistoryContainer = document.createElement(\"div\");\r\n        timeHistoryContainer.className = \"time-history-container\";\r\n        const timeHeader = document.createElement(\"div\");\r\n        timeHeader.className = \"time-div\";\r\n        const gameTime = document.createElement(\"h4\");\r\n        gameTime.innerHTML = \"CZAS GRY\";\r\n        timeHeader.appendChild(gameTime);\r\n        const timer1 = document.createElement(\"div\");\r\n        timer1.id = \"timer1\";\r\n        const timerWhite = document.createElement(\"div\");\r\n        timerWhite.id = \"timer-white\";\r\n        const white = document.createElement(\"h5\");\r\n        white.innerHTML = \"BIAŁE\";\r\n        timer1.appendChild(white);\r\n        timer1.appendChild(timerWhite);\r\n        const timer2 = document.createElement(\"div\");\r\n        timer2.id = \"timer2\";\r\n        const timerBlack = document.createElement(\"div\");\r\n        timerBlack.id = \"timer-black\";\r\n        const black = document.createElement(\"h5\");\r\n        black.innerHTML = \"CZARNE\";\r\n        timer2.appendChild(black);\r\n        timer2.appendChild(timerBlack);\r\n        timeHeader.appendChild(timer1);\r\n        timeHeader.appendChild(timer2);\r\n        timeHistoryContainer.appendChild(timeHeader);\r\n        // HISTORY CONTAINER\r\n        const historyContainer = document.createElement(\"div\");\r\n        historyContainer.className = \"history-div\";\r\n        const historyHeader = document.createElement(\"h4\");\r\n        historyHeader.innerHTML = \"HISTORIA GRY\";\r\n        historyContainer.appendChild(historyHeader);\r\n        const historyBody = document.createElement(\"div\");\r\n        historyBody.className = \"history-div-body\";\r\n        historyContainer.appendChild(historyBody);\r\n        timeHistoryContainer.appendChild(historyContainer);\r\n        // BUTTONS\r\n        const buttonContainer = document.createElement(\"div\");\r\n        buttonContainer.className = \"button-div\";\r\n        const exitButton = document.createElement(\"p\");\r\n        exitButton.className = \"exit-button\";\r\n        exitButton.innerHTML = \"WYJDŹ Z GRY\";\r\n        const undoButton = document.createElement(\"p\");\r\n        undoButton.className = \"undo-button\";\r\n        undoButton.innerHTML = \"COFNIJ RUCH\";\r\n        if (document.documentElement.lang === 'en') {\r\n            gameTime.innerHTML = \"GAME TIME\";\r\n            white.innerHTML = \"WHITE\";\r\n            black.innerHTML = \"BLACK\";\r\n            historyHeader.innerHTML = \"CHESS MOVES\";\r\n            exitButton.innerHTML = \"LEAVE GAME\";\r\n            undoButton.innerHTML = \"REVERSE LAST MOVE\";\r\n        }\r\n        buttonContainer.appendChild(exitButton);\r\n        buttonContainer.appendChild(undoButton);\r\n        timeHistoryContainer.appendChild(buttonContainer);\r\n        document.querySelector('body').appendChild(timeHistoryContainer);\r\n        return timeHistoryContainer;\r\n    }\r\n}\r\nexports.timeHistory = timeHistory;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/timeHistoryContainer.js?");

/***/ }),

/***/ "./src/js-components/timer.js":
/*!************************************!*\
  !*** ./src/js-components/timer.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Timer = void 0;\r\nclass Timer {\r\n    constructor(minutes, player) {\r\n        this.start = this.start.bind(this);\r\n        this.pause = this.pause.bind(this);\r\n        this.player = player;\r\n        this.seconds = minutes * 60;\r\n        this.restart = minutes * 60;\r\n        this.timerHandler = document.querySelector(`#${this.player}`);\r\n        this.interval = 0;\r\n        this.timerHandler.innerHTML = minutes < 10 ? `0${minutes}:00` : `${minutes}:00`;\r\n    }\r\n    start() {\r\n        this.timedown();\r\n        this.interval = window.setInterval(() => this.timedown(), 1000);\r\n    }\r\n    ;\r\n    pause() {\r\n        window.clearInterval(this.interval);\r\n    }\r\n    ;\r\n    stop() {\r\n        this.pause();\r\n        console.log(\"STOP\");\r\n        // wywołanie okna modalnego\r\n    }\r\n    setTimer(time) {\r\n        let minutes = parseInt(time.substring(0, 2));\r\n        let seconds = parseInt(time.substring(3, 5));\r\n        this.seconds = minutes * 60 + seconds;\r\n    }\r\n    ;\r\n    restartTimer() {\r\n        this.seconds = this.restart;\r\n        this.start();\r\n    }\r\n    timedown() {\r\n        this.timerHandler.innerHTML = this.convertSeconds(this.seconds);\r\n        if (this.seconds > 0) {\r\n            this.seconds--;\r\n            return this.seconds;\r\n        }\r\n        else\r\n            this.stop();\r\n        return;\r\n    }\r\n    convertSeconds(s) {\r\n        let min = Math.floor(s / 60);\r\n        let sec = s % 60;\r\n        min = min < 10 ? '0' + min : min;\r\n        sec = sec < 10 ? '0' + sec : sec;\r\n        return min + ':' + sec;\r\n    }\r\n}\r\nexports.Timer = Timer;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/timer.js?");

/***/ }),

/***/ "./src/js-components/translateFunc.js":
/*!********************************************!*\
  !*** ./src/js-components/translateFunc.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getName = void 0;\r\nconst getName = (constructorName) => {\r\n    switch (constructorName) {\r\n        case 'Queen':\r\n            return 'Królowa';\r\n        case 'Rook':\r\n            return 'Wieża';\r\n        case 'Knight':\r\n            return 'Skoczek';\r\n        case 'Bishop':\r\n            return 'Goniec';\r\n        case 'King':\r\n            return 'Król';\r\n        case 'white':\r\n            return 'Biały';\r\n        case 'black':\r\n            return 'Czarny';\r\n        default:\r\n            return 'Pion';\r\n    }\r\n};\r\nexports.getName = getName;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/translateFunc.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;