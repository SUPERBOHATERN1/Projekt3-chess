/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_components_board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js-components/board */ \"./src/js-components/board.js\");\n/* harmony import */ var _js_components_game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js-components/game */ \"./src/js-components/game.js\");\n\r\n\r\n\r\n// const gameBoard = new Board();\r\n// gameBoard.drawBoard();\r\n// fillBoard();\r\n\r\nconst game = new _js_components_game__WEBPACK_IMPORTED_MODULE_1__.Game();\r\n\r\ndocument.querySelectorAll('.board-container div').forEach(element => {\r\n    element.addEventListener('click', selectPiece)\r\n});\r\n\r\nfunction selectPiece(e){\r\n    if(e.target.parentElement.classList.contains('pieceInside'))\r\n        game.startMove(e.target.parentElement);\r\n}\n\n//# sourceURL=webpack://projekt3-chess/./src/index.js?");

/***/ }),

/***/ "./src/js-components/board.js":
/*!************************************!*\
  !*** ./src/js-components/board.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ID = exports.Board = void 0;\r\nvar ID;\r\n(function (ID) {\r\n    ID[ID[\"A\"] = 1] = \"A\";\r\n    ID[ID[\"B\"] = 2] = \"B\";\r\n    ID[ID[\"C\"] = 3] = \"C\";\r\n    ID[ID[\"D\"] = 4] = \"D\";\r\n    ID[ID[\"E\"] = 5] = \"E\";\r\n    ID[ID[\"F\"] = 6] = \"F\";\r\n    ID[ID[\"G\"] = 7] = \"G\";\r\n    ID[ID[\"H\"] = 8] = \"H\";\r\n})(ID || (ID = {}));\r\nexports.ID = ID;\r\nclass Board {\r\n    drawBoard() {\r\n        const boardWrapper = document.createElement('div');\r\n        boardWrapper.classList.add('board-wrapper');\r\n        const letters = document.createElement('div');\r\n        letters.classList.add('letters');\r\n        const numbers = document.createElement('div');\r\n        numbers.classList.add('numbers');\r\n        const boardContainer = document.createElement('div');\r\n        boardContainer.classList.add('board-container');\r\n        for (let i = 1; i < 9; i++) {\r\n            const div = document.createElement('div');\r\n            div.classList.add('notation');\r\n            div.innerText = `${ID[i]}`;\r\n            letters.appendChild(div);\r\n        }\r\n        for (let i = 8; i > 0; i--) {\r\n            const num = document.createElement('div');\r\n            num.innerText = `${i}`;\r\n            numbers.appendChild(num);\r\n        }\r\n        for (let i = 8; i > 0; i--) {\r\n            for (let j = 1; j < 9; j++) {\r\n                const div = document.createElement('div');\r\n                div.id = `${ID[j]}-${i}`; //<-- ważne żeby każdą komórkę na planszy dało się zidentyfikować za pomocą dwóch współrzędnych\r\n                if (i % 2 === 0)\r\n                    div.classList.add(`${j % 2 === 0 ? 'dark' : 'light'}`);\r\n                else\r\n                    div.classList.add(`${j % 2 === 0 ? 'light' : 'dark'}`);\r\n                boardContainer.appendChild(div);\r\n            }\r\n        }\r\n        document.querySelector('body').appendChild(boardWrapper).appendChild(numbers);\r\n        boardWrapper.appendChild(boardContainer);\r\n        boardWrapper.appendChild(letters);\r\n    }\r\n}\r\nexports.Board = Board;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/board.js?");

/***/ }),

/***/ "./src/js-components/game.js":
/*!***********************************!*\
  !*** ./src/js-components/game.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Game = void 0;\r\nconst board_1 = __webpack_require__(/*! ./board */ \"./src/js-components/board.js\");\r\nconst bishop_1 = __webpack_require__(/*! ./pieces/bishop */ \"./src/js-components/pieces/bishop.js\");\r\nconst king_1 = __webpack_require__(/*! ./pieces/king */ \"./src/js-components/pieces/king.js\");\r\nconst knight_1 = __webpack_require__(/*! ./pieces/knight */ \"./src/js-components/pieces/knight.js\");\r\nconst queen_1 = __webpack_require__(/*! ./pieces/queen */ \"./src/js-components/pieces/queen.js\");\r\nconst rook_1 = __webpack_require__(/*! ./pieces/rook */ \"./src/js-components/pieces/rook.js\");\r\nconst pawn_1 = __webpack_require__(/*! ./pieces/pawn */ \"./src/js-components/pieces/pawn.js\");\r\nconst board_2 = __webpack_require__(/*! ./board */ \"./src/js-components/board.js\");\r\nclass Game {\r\n    constructor() {\r\n        this.isWhiteKingChecked = false;\r\n        this.isBlackKingChecked = false;\r\n        this.gameBoard = new board_1.Board;\r\n        this.gameBoard.drawBoard();\r\n        //ustawianie figur\r\n        Game.whites.push(new queen_1.Queen('white', `${board_2.ID[4]}`, 1));\r\n        Game.whites.push(new king_1.King('white', `${board_2.ID[5]}`, 1));\r\n        // Game.blacks.push(new Queen('black', `${ID[4]}`, 8));\r\n        // Game.blacks.push(new King('black', `${ID[5]}`, 8));\r\n        for (let i = 3; i <= 6; i += 3) {\r\n            Game.whites.push(new bishop_1.Bishop('white', `${board_2.ID[i]}`, 1));\r\n            // Game.blacks.push(new Bishop('black', `${ID[i]}`, 8));\r\n        }\r\n        for (let i = 2; i <= 7; i += 5) {\r\n            Game.whites.push(new knight_1.Knight('white', `${board_2.ID[i]}`, 1));\r\n            // Game.blacks.push(new Knight('black', `${ID[i]}`, 8));\r\n        }\r\n        for (let i = 1; i <= 8; i += 7) {\r\n            Game.whites.push(new rook_1.Rook('white', `${board_2.ID[i]}`, 1));\r\n            // Game.blacks.push(new Rook('black', `${ID[i]}`, 8));\r\n        }\r\n        for (let i = 1; i <= 8; i++) {\r\n            Game.whites.push(new pawn_1.Pawn('white', `${board_2.ID[i]}`, 2));\r\n            Game.blacks.push(new pawn_1.Pawn('black', `${board_2.ID[i]}`, 7));\r\n        }\r\n    }\r\n    startMove(square) {\r\n        const x = square.id.charAt(0);\r\n        const y = parseInt(square.id.charAt(2));\r\n        for (let p of Game.whites) {\r\n            if (p.getPositionX() == x && p.getPositionY() == y) {\r\n                Game.setLastChosen(p);\r\n                p.move();\r\n            }\r\n        }\r\n        for (let p of Game.blacks) {\r\n            if (p.getPositionX() == x && p.getPositionY() == y) {\r\n                Game.setLastChosen(p);\r\n                p.move();\r\n            }\r\n        }\r\n    }\r\n    static getPiece(square) {\r\n        const x = square.id.charAt(0);\r\n        const y = parseInt(square.id.charAt(2));\r\n        if (square.innerHTML != '') {\r\n            for (let p of Game.whites) {\r\n                if (p.getPositionX() == x && p.getPositionY() == y) {\r\n                    return p;\r\n                }\r\n            }\r\n            for (let p of Game.blacks) {\r\n                if (p.getPositionX() == x && p.getPositionY() == y) {\r\n                    return p;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    static beat(square) {\r\n        const x = square.id.charAt(0);\r\n        const y = parseInt(square.id.charAt(2));\r\n        let p = Game.getPiece(square);\r\n        if (p) {\r\n            if (p.getColor() === 'white') {\r\n                this.whites.splice(this.whites.indexOf(p), 1);\r\n                square.innerHTML = '';\r\n            }\r\n            else {\r\n                this.blacks.splice(this.blacks.indexOf(p), 1);\r\n                square.innerHTML = '';\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    static setLastChosen(piece) {\r\n        Game.lastChosen = piece;\r\n    }\r\n    static getLastChosen() {\r\n        return Game.lastChosen;\r\n    }\r\n    static getWhites() {\r\n        return Game.whites;\r\n    }\r\n    static getBlacks() {\r\n        return Game.blacks;\r\n    }\r\n}\r\nexports.Game = Game;\r\n//private whoNext:string;\r\nGame.whites = [];\r\nGame.blacks = [];\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/game.js?");

/***/ }),

/***/ "./src/js-components/pieces/bishop.js":
/*!********************************************!*\
  !*** ./src/js-components/pieces/bishop.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Bishop = void 0;\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\n//goniec / laufer\r\nclass Bishop extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.symbol = `../../../static/assets/${this.color}Bishop.png`;\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n        let $self = this;\r\n    }\r\n    showPossibleMoves() {\r\n        // this.removeClassActive();\r\n        // const coordinateX : number = Object.values(ID).indexOf(this.positionX) + 1;\r\n        // const coordinateY : number = this.positionY;\r\n        // if (this.color === 'white') {\r\n        //     // move by one diagonal\r\n        //     // top right\r\n        //     if (9 - coordinateX < 9 - coordinateY) {\r\n        //         for(let i=1; i<9 - coordinateX; i++){\r\n        //             if (document.getElementById(`${ID[coordinateX+i]}-${coordinateY+i}`)!.classList.contains('pieceInside')) {\r\n        //                 break;\r\n        //             } else {\r\n        //                 document.getElementById(`${ID[coordinateX+i]}-${coordinateY+i}`)!.classList.add('active');\r\n        //             }\r\n        //         }\r\n        //     } else {\r\n        //         for(let i=1; i < 9 - coordinateY; i++){\r\n        //             if (document.getElementById(`${ID[coordinateX+i]}-${coordinateY+i}`)!.classList.contains('pieceInside')) {\r\n        //                 break;\r\n        //             } else {\r\n        //                 document.getElementById(`${ID[coordinateX+i]}-${coordinateY+i}`)!.classList.add('active');\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     // down left\r\n        //     if (coordinateY - 1 < coordinateX - 1) {\r\n        //         for(let i=1 ; i < coordinateY; i++){\r\n        //             if (document.getElementById(`${ID[coordinateX-i]}-${coordinateY-i}`)!.classList.contains('pieceInside')) {\r\n        //                 break;\r\n        //             } else {\r\n        //                 document.getElementById(`${ID[coordinateX - i]}-${coordinateY - i}`)!.classList.add('active');\r\n        //             }\r\n        //         }\r\n        //     } else {\r\n        //         for(let i=1 ; i < coordinateX; i++){\r\n        //             if (document.getElementById(`${ID[coordinateX-i]}-${coordinateY-i}`)!.classList.contains('pieceInside')) {\r\n        //                 break;\r\n        //             } else {\r\n        //                 document.getElementById(`${ID[coordinateX - i]}-${coordinateY - i}`)!.classList.add('active');\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     // move by second diagonal\r\n        //     // top left\r\n        //     if (coordinateX < 9 - coordinateY) {\r\n        //         for(let i = 1; i < coordinateX; i++){\r\n        //             if (document.getElementById(`${ID[coordinateX-i]}-${coordinateY+i}`)!.classList.contains('pieceInside')) {\r\n        //                 break;\r\n        //             } else {\r\n        //                 document.getElementById(`${ID[coordinateX-i]}-${coordinateY+i}`)!.classList.add('active');\r\n        //             }\r\n        //         }\r\n        //     } else {\r\n        //         for(let i = 1 ; i < 9 - coordinateY; i++) {\r\n        //             if (document.getElementById(`${ID[coordinateX-i]}-${coordinateY + i}`)!.classList.contains('pieceInside')) {\r\n        //                 break;\r\n        //             } else {\r\n        //                 document.getElementById(`${ID[coordinateX - i]}-${coordinateY + i}`)!.classList.add('active');\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     // down right\r\n        //     if (coordinateY < 9 - coordinateX) {\r\n        //         for(let i = 1 ; i < coordinateY ; i++){\r\n        //             if (document.getElementById(`${ID[coordinateX+i]}-${coordinateY-i}`)!.classList.contains('pieceInside')) {\r\n        //                 break;\r\n        //             } else {\r\n        //                 document.getElementById(`${ID[coordinateX + i]}-${coordinateY - i}`)!.classList.add('active');\r\n        //             }\r\n        //         }\r\n        //     } else {\r\n        //         for(let i=1; i < 9 - coordinateX; i++) {\r\n        //             if (document.getElementById(`${ID[coordinateX+i]}-${coordinateY-i}`)!.classList.contains('pieceInside')) {\r\n        //                 break;\r\n        //             } else {\r\n        //                 document.getElementById(`${ID[coordinateX + i]}-${coordinateY - i}`)!.classList.add('active');\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // } \r\n        // document.querySelectorAll('.active').forEach((possibleMove) => {                 \r\n        //     possibleMove.addEventListener('click', () => {\r\n        //         const posX = possibleMove.id.charAt(0);\r\n        //         const posY = parseInt(possibleMove.id.charAt(2));\r\n        //         if(possibleMove.classList.contains('active') && (Game.getLastChosen() === this)){\r\n        //             this.setOnBoard(posX, posY);\r\n        //             this.removeClassActive();\r\n        //         }                \r\n        //     });      \r\n        // })\r\n        return [];\r\n    }\r\n    move() {\r\n    }\r\n    moveBishop(possibleMove) {\r\n        const posX = possibleMove.id.charAt(0);\r\n        const posY = parseInt(possibleMove.id.charAt(2));\r\n        this.setOnBoard(posX, posY);\r\n    }\r\n}\r\nexports.Bishop = Bishop;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/bishop.js?");

/***/ }),

/***/ "./src/js-components/pieces/king.js":
/*!******************************************!*\
  !*** ./src/js-components/pieces/king.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.King = void 0;\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\nconst knight_1 = __webpack_require__(/*! ./knight */ \"./src/js-components/pieces/knight.js\");\r\nclass King extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.symbol = `../../../static/assets/${this.color}King.png`; //<-- w przyszłości bedzie tu ścieżka do img figury\r\n        this.dangerZones = this.getKnightDanger();\r\n        this.isChecked = this.getChecked();\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        const possibleMoves = [];\r\n        const arrayOfX = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n        const indexOfX = arrayOfX.indexOf(this.getPositionX());\r\n        this.dangerZones = this.getKnightDanger();\r\n        for (let i = -1; i <= 1; i++) {\r\n            for (let j = -1; j <= 1; j++) {\r\n                const square = document.querySelector(`#${arrayOfX[indexOfX + i]}-${this.getPositionY() + j}`);\r\n                if (square != null && square.innerHTML == \"\" && this.dangerZones.indexOf(`${arrayOfX[indexOfX + i]}-${this.getPositionY() + j}`) === -1)\r\n                    possibleMoves.push(`${arrayOfX[indexOfX + i]}-${this.getPositionY() + j}`);\r\n            }\r\n        }\r\n        return possibleMoves;\r\n    }\r\n    move() {\r\n        this.removeClassActive();\r\n        const possibleMovesArr = this.showPossibleMoves();\r\n        possibleMovesArr.forEach(id => {\r\n            const square = document.querySelector(`#${id}`);\r\n            square.classList.add('active'); //<--oznaczenie wizualne na szachownicy\r\n            square.addEventListener('click', () => {\r\n                if (square.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\r\n                    this.setOnBoard(square.id.charAt(0), parseInt(square.id.charAt(2))); //<-- przeniesienie figury po kliknięciu\r\n                    this.removeClassActive();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    getChecked() {\r\n        if (this.getKnightDanger().indexOf(`#${this.positionX}-${this.positionY}`) !== -1) {\r\n            return true;\r\n        }\r\n        else\r\n            return false;\r\n    }\r\n    getKnightDanger() {\r\n        const dangerArr = [];\r\n        if (this.color === 'white') {\r\n            for (let p of game_1.Game.getBlacks()) {\r\n                if (p instanceof knight_1.Knight) {\r\n                    const possibleOpponentMoves = p.showPossibleMoves();\r\n                    possibleOpponentMoves.forEach(id => {\r\n                        dangerArr.push(id);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let p of game_1.Game.getWhites()) {\r\n                if (p instanceof knight_1.Knight) {\r\n                    const possibleOpponentMoves = p.showPossibleMoves();\r\n                    possibleOpponentMoves.forEach(id => {\r\n                        dangerArr.push(id);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return dangerArr;\r\n    }\r\n}\r\nexports.King = King;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/king.js?");

/***/ }),

/***/ "./src/js-components/pieces/knight.js":
/*!********************************************!*\
  !*** ./src/js-components/pieces/knight.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Knight = void 0;\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\nconst board_1 = __webpack_require__(/*! ../board */ \"./src/js-components/board.js\");\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\n//skoczek / koń\r\nclass Knight extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.symbol = `../../../static/assets/${this.color}Knight.png`;\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        this.removeClassActive();\r\n        const allPossibleIds = []; // przechowuje wszystkie możliwe ID - łącznie z tymi na których stoją inne figury - przyda się do spr. czy stoją figury innego koloru i zbijania\r\n        this.possibleMovesIDs = []; // tu trafiają tylko możliwe ruchy figury\r\n        const coordinateX = Object.values(board_1.ID).indexOf(this.positionX) + 1;\r\n        const coordinateY = this.positionY;\r\n        // wypłenienie tablicy wszystkimi możliwymi ruchami - bez sprawdzenia czy stoją na polach inne bierki\r\n        for (let i = coordinateX - 2; i <= coordinateX + 2; i += 4) {\r\n            if (i >= 1 && i <= 8) {\r\n                for (let j = coordinateY - 1; j <= coordinateY + 1; j += 2) {\r\n                    if (j >= 1 && j <= 8) {\r\n                        allPossibleIds.push(`${board_1.ID[i]}-${j}`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let i = coordinateY - 2; i <= coordinateY + 2; i += 4) {\r\n            if (i >= 1 && i <= 8) {\r\n                for (let j = coordinateX - 1; j <= coordinateX + 1; j += 2) {\r\n                    if (j >= 1 && j <= 8) {\r\n                        allPossibleIds.push(`${board_1.ID[j]}-${i}`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Sprawdzenie czy na polu nie stoi żadna figura lub czy figura ma taki kolor jak atakująca, jesli nie to dodaję ID do właściwej - zwracanej tablicy.\r\n        allPossibleIds.forEach((id) => {\r\n            if (!(document.querySelector(`#${id}`).querySelector('img')?.classList.contains(`${this.color}`)) || document.querySelector(`#${id}`).innerHTML == '') {\r\n                this.possibleMovesIDs.push(id);\r\n            }\r\n        });\r\n        //console.log(this.possibleMovesIDs);\r\n        return this.possibleMovesIDs;\r\n    }\r\n    move() {\r\n        const possibilities = this.showPossibleMoves();\r\n        possibilities.forEach((id) => {\r\n            document.querySelector(`#${id}`).classList.add('active');\r\n        });\r\n        //adding event listener to each field with active class to perform a figure's move after click\r\n        document.querySelectorAll('.active').forEach((possMove) => {\r\n            possMove.addEventListener('click', () => {\r\n                const coorX = possMove.id.charAt(0);\r\n                const coorY = parseInt(possMove.id.charAt(2));\r\n                if (possMove.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\r\n                    // // próbna implementacja bicia\r\n                    // if (possMove.innerHTML != '') {\r\n                    //     possMove.innerHTML = '';\r\n                    // }\r\n                    this.setOnBoard(coorX, coorY);\r\n                    this.removeClassActive();\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.Knight = Knight;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/knight.js?");

/***/ }),

/***/ "./src/js-components/pieces/pawn.js":
/*!******************************************!*\
  !*** ./src/js-components/pieces/pawn.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Pawn = void 0;\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\nconst queen_1 = __webpack_require__(/*! ./queen */ \"./src/js-components/pieces/queen.js\");\r\nconst knight_1 = __webpack_require__(/*! ./knight */ \"./src/js-components/pieces/knight.js\");\r\nconst rook_1 = __webpack_require__(/*! ./rook */ \"./src/js-components/pieces/rook.js\");\r\nconst bishop_1 = __webpack_require__(/*! ./bishop */ \"./src/js-components/pieces/bishop.js\");\r\n//pion\r\nclass Pawn extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.symbol = `../../../static/assets/${this.color}Pawn.png`;\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        this.removeClassActive();\r\n        let posXAttack1 = this.nextChar(this.positionX);\r\n        let posXAttack2 = this.previousChar(this.positionX);\r\n        let possibleMovesIds = [];\r\n        let possibleAttackMovesIds = [];\r\n        let possibleEnPassant = [];\r\n        if (this.color === 'white') {\r\n            let positionY1 = this.positionY + 1;\r\n            let positionY2 = document.getElementById(`${this.positionX}-${positionY1}`);\r\n            let attack1 = document.getElementById(`${posXAttack1}-${positionY1}`);\r\n            let attack2 = document.getElementById(`${posXAttack2}-${positionY1}`);\r\n            let pawnPos = document.getElementById(`${posXAttack1}-${this.positionY}`);\r\n            // ATTACK\r\n            if (attack1 !== null) {\r\n                if (attack1.classList.contains('pieceInside') && !(attack1.querySelector('img').classList.contains(`${this.color}`))) {\r\n                    possibleAttackMovesIds.push(`${posXAttack1}-${positionY1}`);\r\n                }\r\n            }\r\n            if (attack2 !== null) {\r\n                if (attack2.classList.contains('pieceInside') && !(attack2.querySelector('img').classList.contains(`${this.color}`))) {\r\n                    possibleAttackMovesIds.push(`${posXAttack2}-${positionY1}`);\r\n                }\r\n            }\r\n            // MOVES\r\n            if (this.positionY === 2 && !(positionY2.matches('.pieceInside'))) {\r\n                for (let i = 3; i < 5; i++) {\r\n                    possibleMovesIds.push(`${this.positionX}-${i}`);\r\n                }\r\n            }\r\n            else if (!(positionY2.matches('.pieceInside'))) {\r\n                possibleMovesIds.push(`${this.positionX}-${positionY1}`);\r\n            }\r\n            //EN PASSANT\r\n            // if (this.color === 'white' \r\n            // && this.positionY === 5 \r\n            // && pawnPos.querySelector('img')!.src.includes('Pawn')\r\n            // && !(attack1.classList.contains('pieceInside'))) {\r\n            // possibleEnPassant.push(`${posXAttack1}-${positionY1}`);\r\n            // console.log(possibleEnPassant);\r\n            // }\r\n        }\r\n        else {\r\n            let positionY1 = this.positionY - 1;\r\n            let positionY2 = document.getElementById(`${this.positionX}-${positionY1}`);\r\n            let attack1 = document.getElementById(`${posXAttack1}-${positionY1}`);\r\n            let attack2 = document.getElementById(`${posXAttack2}-${positionY1}`);\r\n            // ATTACK\r\n            if (attack1 !== null) {\r\n                if (attack1.classList.contains('pieceInside') && !(attack1.querySelector('img').classList.contains(`${this.color}`))) {\r\n                    possibleAttackMovesIds.push(`${posXAttack1}-${positionY1}`);\r\n                }\r\n            }\r\n            if (attack2 !== null) {\r\n                if (attack2.classList.contains('pieceInside') && !(attack2.querySelector('img').classList.contains(`${this.color}`))) {\r\n                    possibleAttackMovesIds.push(`${posXAttack2}-${positionY1}`);\r\n                }\r\n            }\r\n            // MOVES\r\n            if (this.positionY === 7 && !(positionY2.matches('.pieceInside'))) {\r\n                for (let i = 6; i > 4; i--) {\r\n                    possibleMovesIds.push(`${this.positionX}-${i}`);\r\n                }\r\n            }\r\n            else if (!(positionY2.matches('.pieceInside'))) {\r\n                possibleMovesIds.push(`${this.positionX}-${positionY1}`);\r\n            }\r\n        }\r\n        let allPossibleMovesIds = possibleMovesIds.concat(possibleAttackMovesIds).concat(possibleEnPassant);\r\n        return allPossibleMovesIds;\r\n    }\r\n    move() {\r\n        console.log(this.enPassant());\r\n        const showEnPassant = this.enPassant();\r\n        const possibilities = this.showPossibleMoves();\r\n        possibilities.forEach((id) => {\r\n            document.querySelector(`#${id}`).classList.add('active');\r\n        });\r\n        showEnPassant.forEach((id) => {\r\n            document.querySelector(`#${id}`).classList.add('active');\r\n            document.querySelector(`#${id}`).classList.add('en-pass');\r\n        });\r\n        //adding event listener to each field with active class to perform a figure's move after click\r\n        document.querySelectorAll('.active').forEach((possMove) => {\r\n            possMove.addEventListener('click', () => {\r\n                const coorX = possMove.id.charAt(0);\r\n                const coorY = parseInt(possMove.id.charAt(2));\r\n                const enPass = document.getElementById(`${coorX}-${(coorY - 1)}`);\r\n                console.log(enPass);\r\n                if (possMove.classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\r\n                    if (possMove.innerHTML != '') {\r\n                        game_1.Game.beat(possMove);\r\n                    }\r\n                    if (possMove.classList.contains('en-pass')) {\r\n                        game_1.Game.beat(enPass);\r\n                        possMove.classList.remove('en-pass');\r\n                        enPass.classList.remove('pieceInside');\r\n                    }\r\n                    this.setOnBoard(coorX, coorY);\r\n                    this.removeClassActive();\r\n                }\r\n                if (this.color === 'white' && coorY === 8 && this.parentSquare.querySelector('img').src.includes('Pawn')) {\r\n                    this.parentSquare.appendChild(this.pawnPromotion(this));\r\n                }\r\n                else if (coorY === 1 && this.parentSquare.querySelector('img').src.includes('Pawn')) {\r\n                    this.parentSquare.appendChild(this.pawnPromotion(this));\r\n                }\r\n            }, { capture: true });\r\n        });\r\n    }\r\n    nextChar(posXRight) {\r\n        return String.fromCharCode(posXRight.charCodeAt(0) + 1);\r\n    }\r\n    previousChar(posXRight) {\r\n        return String.fromCharCode(posXRight.charCodeAt(0) - 1);\r\n    }\r\n    // promotion\r\n    pawnPromotion(pawn) {\r\n        const pieces = [\r\n            { pieceName: queen_1.Queen, name: \"Queen\", handler: '' },\r\n            { pieceName: rook_1.Rook, name: \"Rook\", handler: '' },\r\n            { pieceName: knight_1.Knight, name: \"Knight\", handler: '' },\r\n            { pieceName: bishop_1.Bishop, name: \"Bishop\", handler: '' }\r\n        ];\r\n        const modalWindowPawn = document.createElement(\"div\");\r\n        const promotionArray = ['Knight', 'Queen', 'Bishop', 'Rook'];\r\n        const parentSquare = document.getElementById(`${pawn.getPositionX}`);\r\n        if (this.color === 'white') {\r\n            modalWindowPawn.className = \"modal-window-white\";\r\n            for (const piece of pieces) {\r\n                const selectableFigure = document.createElement(\"img\");\r\n                selectableFigure.setAttribute('src', `../../../static/assets/white${piece.name}.png`);\r\n                selectableFigure.style.height = '90px';\r\n                const { handler, pieceName: PieceName } = piece;\r\n                modalWindowPawn.appendChild(selectableFigure);\r\n                selectableFigure.addEventListener('click', () => {\r\n                    console.log(`#${pawn.getPositionX()}-8`);\r\n                    document.querySelector(`#${pawn.getPositionX()}-8`).removeChild(modalWindowPawn);\r\n                    const pieceToCreate = new PieceName('white', `${pawn.getPositionX()}`, 8);\r\n                    let whites = game_1.Game.getWhites();\r\n                    whites.push(pieceToCreate);\r\n                    const pawnToRemove = whites.indexOf(pawn);\r\n                    whites.splice(pawnToRemove, 1);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            modalWindowPawn.className = \"modal-window-black\";\r\n            for (const piece of pieces) {\r\n                const selectableFigure = document.createElement(\"img\");\r\n                selectableFigure.setAttribute('src', `../../../static/assets/black${piece.name}.png`);\r\n                selectableFigure.style.height = '90px';\r\n                const { handler, pieceName: PieceName } = piece;\r\n                modalWindowPawn.appendChild(selectableFigure);\r\n                selectableFigure.addEventListener('click', () => {\r\n                    console.log(`#${pawn.getPositionX()}-1`);\r\n                    document.querySelector(`#${pawn.getPositionX()}-1`).removeChild(modalWindowPawn);\r\n                    const pieceToCreate = new PieceName('black', `${pawn.getPositionX()}`, 1);\r\n                    let blacks = game_1.Game.getBlacks();\r\n                    blacks.push(pieceToCreate);\r\n                    const pawnToRemove = blacks.indexOf(pawn);\r\n                    blacks.splice(pawnToRemove, 1);\r\n                });\r\n            }\r\n        }\r\n        return modalWindowPawn;\r\n    }\r\n    ;\r\n    //en passant\r\n    enPassant() {\r\n        let pawnPosX = this.nextChar(this.positionX); //|| this.previousChar(this.positionX);\r\n        let pawnPos = document.getElementById(`${pawnPosX}-${this.positionY}`);\r\n        let positionY1 = this.positionY + 1;\r\n        let emptySquare1 = document.getElementById(`${pawnPosX}-${positionY1}`);\r\n        let positionY2 = this.positionY - 1;\r\n        let emptySquare2 = document.getElementById(`${pawnPosX}-${positionY2}`);\r\n        const enPassant = [];\r\n        if (this.color === 'white'\r\n            && this.positionY === 5\r\n            && pawnPos.querySelector('img')?.src.includes('Pawn')\r\n            && !(emptySquare1.classList.contains('pieceInside'))) {\r\n            enPassant.push(`${pawnPosX}-${positionY1}`);\r\n        }\r\n        if (this.color === 'black'\r\n            && this.positionY === 4\r\n            && pawnPos.querySelector('img').src.includes('Pawn')\r\n            && emptySquare1.classList.contains('pieceInside')) {\r\n            enPassant.push(`${pawnPosX}-${positionY1}`);\r\n        }\r\n        return enPassant;\r\n    }\r\n}\r\nexports.Pawn = Pawn;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/pawn.js?");

/***/ }),

/***/ "./src/js-components/pieces/piece.js":
/*!*******************************************!*\
  !*** ./src/js-components/pieces/piece.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Piece = void 0;\r\nclass Piece {\r\n    //zastanawiam się czy nie zrobić tych wszystkich właściwości private...\r\n    constructor(color, positionX, positionY) {\r\n        this.symbol = ''; //<-- domyślnie ustawiłem puste, bo każda figura ma inny symbol\r\n        this.color = color;\r\n        this.positionX = positionX;\r\n        this.positionY = positionY;\r\n        this.possibleMovesIDs = this.showPossibleMoves();\r\n        this.parentSquare = document.getElementById(`${this.positionX}-${this.positionY}`); //<-- parentSquare przechowuje diva, w którym obecnie znajduje się figura\r\n    }\r\n    setOnBoard(pX, pY) {\r\n        //w pierwszych dwóch linijkach usuwamy figurę z obecnego miejsca, następnie ustawiamy w nowym\r\n        this.parentSquare.innerHTML = \"\";\r\n        this.parentSquare.classList.remove('pieceInside');\r\n        const img = document.createElement('img');\r\n        img.classList.add('image');\r\n        img.classList.add(`${this.color}`.toLowerCase());\r\n        img.setAttribute('src', this.symbol);\r\n        this.updatePosition(pX, pY);\r\n        this.parentSquare.appendChild(img);\r\n        const imgContainer = img.parentElement;\r\n        imgContainer.classList.add('pieceInside');\r\n    }\r\n    updatePosition(pX, pY) {\r\n        this.positionX = pX;\r\n        this.positionY = pY;\r\n        this.parentSquare = document.getElementById(`${this.positionX}-${this.positionY}`);\r\n    }\r\n    removeClassActive() {\r\n        let elems = document.querySelectorAll('.active');\r\n        for (var i = 0; i < elems.length; i++) {\r\n            elems[i].classList.remove('active');\r\n            if (elems[i].classList.contains('en-pass')) {\r\n                elems[i].classList.remove('en-pass');\r\n            }\r\n        }\r\n    }\r\n    getPositionX() {\r\n        return this.positionX;\r\n    }\r\n    getPositionY() {\r\n        return this.positionY;\r\n    }\r\n    getColor() {\r\n        return this.color;\r\n    }\r\n}\r\nexports.Piece = Piece;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/piece.js?");

/***/ }),

/***/ "./src/js-components/pieces/queen.js":
/*!*******************************************!*\
  !*** ./src/js-components/pieces/queen.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Queen = void 0;\r\nconst board_1 = __webpack_require__(/*! ../board */ \"./src/js-components/board.js\");\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\nconst game_1 = __webpack_require__(/*! ../game */ \"./src/js-components/game.js\");\r\n//królowa / hetman\r\nclass Queen extends piece_1.Piece {\r\n    constructor(color, positionX, positionY, history) {\r\n        super(color, positionX, positionY);\r\n        this.history = history;\r\n        //this.symbol = `../../../static/assets/${this.color}Queen.png`;\r\n        //this.symbol = `../../../../Projekt3-chess/static/assets/whiteQueen.png`;\r\n        this.symbol = `../../../static/assets/${this.color}Queen.png`;\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        // const movesShow:MovesShow =(id)=>{\r\n        //     const movesPossibilities = [...document.querySelectorAll(`#${id}`)];\r\n        //         movesPossibilities.forEach(el=>{\r\n        //             el.classList.toggle('active');\r\n        //         })\r\n        //  }\r\n        //  this.collectAllPossibleMoves().forEach(id=>{\r\n        //         movesShow(id)\r\n        //         this.queenMove()\r\n        //     })\r\n        return [];\r\n    }\r\n    queenMove() {\r\n        const squares = [...document.querySelectorAll('.board-container div')];\r\n        squares.forEach(square => {\r\n            square.addEventListener('click', () => {\r\n                if (!(square).classList.contains('pieceInside') && (square).classList.contains('active') && (game_1.Game.getLastChosen() === this)) {\r\n                    this.setOnBoard((square).id.charAt(0), parseInt((square).id.charAt(2)));\r\n                    this.removeClassActive();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    collectAllPossibleMoves() {\r\n        const coordinateX = Object.values(board_1.ID).indexOf(this.positionX) + 1;\r\n        const moves = [];\r\n        const moveUp = () => {\r\n            for (let i = this.positionY + 1; i < 9; i++) {\r\n                const checkSquare = document.querySelector(`#${this.positionX}-${i}`);\r\n                if (checkSquare?.classList.contains('pieceInside') || checkSquare == null)\r\n                    return;\r\n                moves.push(`${this.positionX}-${i}`);\r\n            }\r\n        };\r\n        const moveDown = () => {\r\n            for (let j = this.positionY - 1; j > 0; j--) {\r\n                const checkSquare = document.querySelector(`#${this.positionX}-${j}`);\r\n                if (checkSquare?.classList.contains('pieceInside') || checkSquare === null)\r\n                    return;\r\n                moves.push(`${this.positionX}-${j}`);\r\n            }\r\n        };\r\n        const moveRight = () => {\r\n            for (let i = coordinateX + 1; i < 9; i++) {\r\n                const checkSquare = document.querySelector(`#${board_1.ID[i]}-${this.positionY}`);\r\n                if (checkSquare?.classList.contains('pieceInside') || checkSquare == null)\r\n                    return;\r\n                moves.push(`${board_1.ID[i]}-${this.positionY}`);\r\n            }\r\n        };\r\n        const moveLeft = () => {\r\n            for (let i = coordinateX - 1; i > 0; i--) {\r\n                const checkSquare = document.querySelector(`#${board_1.ID[i]}-${this.positionY}`);\r\n                if (checkSquare?.classList.contains('pieceInside') || checkSquare == null)\r\n                    return;\r\n                moves.push(`${board_1.ID[i]}-${this.positionY}`);\r\n            }\r\n        };\r\n        const diagonalMoves = () => {\r\n            if (this.color === 'white') {\r\n                // top right\r\n                if (9 - coordinateX < 9 - this.positionY) {\r\n                    for (let i = 1; i < 9 - coordinateX; i++) {\r\n                        if (document.getElementById(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`).classList.contains('pieceInside')) {\r\n                            break;\r\n                        }\r\n                        else {\r\n                            moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 1; i < 9 - this.positionY; i++) {\r\n                        if (document.getElementById(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`).classList.contains('pieceInside')) {\r\n                            break;\r\n                        }\r\n                        else {\r\n                            moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY + i}`);\r\n                        }\r\n                    }\r\n                }\r\n                // down left\r\n                if (this.positionY - 1 < coordinateX - 1) {\r\n                    for (let i = 1; i < this.positionY; i++) {\r\n                        if (document.getElementById(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`).classList.contains('pieceInside')) {\r\n                            break;\r\n                        }\r\n                        else {\r\n                            moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 1; i < coordinateX; i++) {\r\n                        if (document.getElementById(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`).classList.contains('pieceInside')) {\r\n                            break;\r\n                        }\r\n                        else {\r\n                            moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY - i}`);\r\n                        }\r\n                    }\r\n                }\r\n                // top left\r\n                if (coordinateX < 9 - this.positionY) {\r\n                    for (let i = 1; i < coordinateX; i++) {\r\n                        if (document.getElementById(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`).classList.contains('pieceInside')) {\r\n                            break;\r\n                        }\r\n                        else {\r\n                            moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 1; i < 9 - this.positionY; i++) {\r\n                        if (document.getElementById(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`).classList.contains('pieceInside')) {\r\n                            break;\r\n                        }\r\n                        else {\r\n                            moves.push(`${board_1.ID[coordinateX - i]}-${this.positionY + i}`);\r\n                        }\r\n                    }\r\n                }\r\n                // down right\r\n                if (this.positionY < 9 - coordinateX) {\r\n                    for (let i = 1; i < this.positionY; i++) {\r\n                        if (document.getElementById(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`).classList.contains('pieceInside')) {\r\n                            break;\r\n                        }\r\n                        else {\r\n                            moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 1; i < 9 - coordinateX; i++) {\r\n                        if (document.getElementById(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`).classList.contains('pieceInside')) {\r\n                            break;\r\n                        }\r\n                        else {\r\n                            moves.push(`${board_1.ID[coordinateX + i]}-${this.positionY - i}`);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        diagonalMoves();\r\n        moveUp();\r\n        moveDown();\r\n        moveLeft();\r\n        moveRight();\r\n        return moves;\r\n    }\r\n    move() {\r\n    }\r\n}\r\nexports.Queen = Queen;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/queen.js?");

/***/ }),

/***/ "./src/js-components/pieces/rook.js":
/*!******************************************!*\
  !*** ./src/js-components/pieces/rook.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n\"use stricte\";\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Rook = void 0;\r\nconst piece_1 = __webpack_require__(/*! ./piece */ \"./src/js-components/pieces/piece.js\");\r\n//wieża\r\nclass Rook extends piece_1.Piece {\r\n    constructor(color, positionX, positionY) {\r\n        super(color, positionX, positionY);\r\n        this.symbol = `../../../static/assets/${this.color}Rook.png`;\r\n        this.setOnBoard(this.positionX, this.positionY);\r\n    }\r\n    showPossibleMoves() {\r\n        // this.removeClassActive();\r\n        // const arrayOfX:string[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n        // // const indexOfX:number = arrayOfX.indexOf(this.getPositionX());\r\n        // const rookLineX:string = this.getPositionX();\r\n        // const rookLineY:number = this.getPositionY();\r\n        // const checkYAxis = ()=>{\r\n        //     // top\r\n        //     console.log(rookLineX,rookLineY)\r\n        //     for(let i=rookLineY+1;i<=8;i++){\r\n        //         let squareY = document.querySelector(`#${rookLineX}-${i}`);\r\n        //         if(!squareY?.classList.contains('pieceInside')){\r\n        //             if (squareY != null)\r\n        //             squareY.classList.add('active');\r\n        //         }\r\n        //         else{\r\n        //             break;\r\n        //         }\r\n        //     }\r\n        //     // bot\r\n        //     for(let i=rookLineY-1;i>0;i--){\r\n        //         let squareY = document.querySelector(`#${rookLineX}-${i}`);\r\n        //         if(!squareY?.classList.contains('pieceInside')){\r\n        //             if (squareY != null)\r\n        //             squareY.classList.add('active');\r\n        //         }\r\n        //         else{\r\n        //             break;\r\n        //         }\r\n        //     }\r\n        // }\r\n        // const checkXAxis = ()=>{\r\n        //     // right\r\n        //     const clickedElementIndex = arrayOfX.indexOf(rookLineX)\r\n        //     for(let i=clickedElementIndex;i<=8;i++){\r\n        //         let squareY = document.querySelector(`#${arrayOfX[i+1]}-${rookLineY}`);\r\n        //         if(!squareY?.classList.contains('pieceInside')){\r\n        //             if (squareY != null)\r\n        //             squareY.classList.add('active');\r\n        //         }\r\n        //         else{\r\n        //             break;\r\n        //         }\r\n        //     }\r\n        //     // left\r\n        //     for(let i=clickedElementIndex;i>0;i--){\r\n        //         let squareY = document.querySelector(`#${arrayOfX[i-1]}-${rookLineY}`);\r\n        //         if(!squareY?.classList.contains('pieceInside')){\r\n        //             if (squareY != null)\r\n        //             squareY.classList.add('active');\r\n        //         }\r\n        //         else{\r\n        //             break;\r\n        //         }\r\n        //     }\r\n        // }\r\n        // checkYAxis();\r\n        // checkXAxis();\r\n        // const squares:NodeList = document.querySelectorAll('.board-container div');\r\n        // squares.forEach(square => {\r\n        //     square.addEventListener('click', (e) => {\r\n        //         let pickedFigure = e.currentTarget;\r\n        //         if(!((square as HTMLElement).classList.contains('pieceInside')) && (square as HTMLElement).classList.contains('active')   && (Game.getLastChosen() === this)){\r\n        //             this.setOnBoard((square as HTMLElement).id.charAt(0), parseInt((square as HTMLElement).id.charAt(2)));\r\n        //             squares.forEach(square => (square as HTMLElement).classList.remove('active'));\r\n        //         }\r\n        //     });\r\n        // });\r\n        return [];\r\n    }\r\n    move() {\r\n    }\r\n}\r\nexports.Rook = Rook;\r\n\n\n//# sourceURL=webpack://projekt3-chess/./src/js-components/pieces/rook.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;